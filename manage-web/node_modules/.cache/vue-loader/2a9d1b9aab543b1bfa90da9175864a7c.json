{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\system\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\system\\user\\index.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport dayjs from 'dayjs'\nimport { post } from '@/libs/axios-cfg'\nimport AddUser from './components/add.vue'\nimport UpdateUser from './components/update.vue'\nimport ResetPassword from './components/reset-password.vue'\nexport default {\n    data () {\n        return {\n            addUserModal:false,\n            updateUserModal:false,\n            resetPasswordModal:false,\n            updateUserId:null,\n            resetPasswordUser:null,\n            selections:[],\n            removeModal:false,\n            setting:{\n                loading:true,\n                showBorder:true\n            },\n            search:{\n                type:'name',\n                value:''\n            },\n            columns: [\n                {title: 'ID', key: 'id',sortable: true, width: 180},\n                {title: '用户名', key: 'username',sortable: true, width: 150},\n                {title: '年龄',key: 'age',sortable: true, width: 80},\n                {\n                    title: '状态',\n                    key: 'status',\n                    width: 100,\n                    render:(h,params)=>{\n                        return h('span',\n                            {\n                                style: {color: params.row.status == 1 ? 'green' : 'red'\n                            }\n                        }, params.row.status == 1 ? '正常' : '锁定中')\n                    },\n                    sortable: true\n                },\n                {\n                    title: '角色组',\n                    key: 'roles',\n                    width: 250,\n                    render:(h,params)=>{\n                        let roles = []\n                        if(params.row.roles!=null && params.row.roles.length>0){\n                            params.row.roles.forEach(element => {\n                                let role = h('Tag',{\n                                    props:{\n                                        color:\"blue\"\n                                    }\n                                },element.name)\n                                roles.push(role)\n                            });\n                            return h('div',roles)\n                        }\n                        return h('span','空')\n                    }\n                },\n                {\n                    title: '创建日期',\n                    key: 'createDate',\n                    width: 180,\n                    render:(h,params)=>{\n                        return h('span',dayjs(params.row.createDate).format('YYYY年MM月DD日 HH:mm:ss'))\n                    },\n                    sortable: true\n                },\n                {\n                    title: '操作',\n                    key: 'action',\n                    width: 260,\n                    align: 'center',\n                    fixed: 'right',\n                    render: (h, params) => {\n                        return h('div', [\n                            h('Button', {\n                                props: {type: params.row.status == 1 ? 'success' : 'warning' ,size: 'small'},\n                                style: {marginRight: '5px'},\n                                on:{\n                                    click:()=>{\n                                        this.lockUser(params.row)\n                                    }\n                                }\n                            }, params.row.status == 1 ? '锁定' : '恢复'),\n                            h('Button', {\n                                props: {type: 'primary',size: 'small'},\n                                style: {marginRight: '5px'},\n                                on:{\n                                    click:()=>{\n                                        this.openAddModal(params.row.id)\n                                    }\n                                }\n                            }, '修改'),\n                            h('Button', {\n                                props: {type: 'info',size: 'small'},\n                                style: {marginRight: '5px'},\n                                on:{\n                                    click:()=>{\n                                        this.openAddModal(params.row,'resetPassword')\n                                    }\n                                }\n                            }, '重置密码'),\n                            h('Button', {\n                                props: {type: 'error',size: 'small'},\n                                on:{\n                                    click:()=>{\n                                        this.removeObject = {\n                                            obj:params.row,\n                                            index:params.index\n                                        }\n                                        this.removeModal = true;\n                                    }\n                                }\n                            }, '删除')\n                        ]);\n                    }\n                }\n            ],\n            data: {},\n            dataFilter:{\n                page:1,\n                pageSize:10\n            },\n            removeObject:null,\n            roles:null\n        }\n    },\n    components:{\n        AddUser,UpdateUser,ResetPassword\n    },\n    created(){\n        this.getData();\n        this.getRoleList();\n    },\n    methods:{\n        /**\n         * @description 分页更换事件回调\n         */\n        pageChange(p){\n            this.dataFilter.page = p;\n            this.getData();\n        },\n        /**\n         * @description 分页每页显示数量改变事件回调\n         */\n        pageSizeChange(p){\n            this.dataFilter.pageSize = p;\n            this.getData();\n        },\n        /**\n         * @description 删除用户\n         */\n        async removeUser(){\n            this.removeModal = false;\n            if(this.removeObject==null){\n                this.$Message.warning(\"删除对象为空，无法继续执行！\");\n                return false;\n            }\n            this.setting.loading = true;\n            try {\n                let res = await post('/system/user/remove/{uid}',null,{\n                    uid: this.removeObject.obj.id\n                })\n                this.$Message.success(\"删除成功\");\n                this.data.records.splice(this.removeObject.index,1);\n            } catch (error) {\n                this.$throw(error)\n            }\n            this.setting.loading = false;\n        },\n        /**\n         * @description 锁定/解锁用户\n         */\n        async lockUser(obj){\n            this.setting.loading = true;\n            let status = obj.status;\n            let req_url = status==1 ? 'lock' : 'unlock';\n            let req_rep = status==1 ? 0 : 1;\n            let req_msg = status==1 ? '已锁定' : '已解锁';\n            try {\n                let res = await post('/system/user/{method}/{uid}',null,{\n                    uid: obj.id,\n                    method: req_url\n                })\n                this.$Message.destroy();\n                this.$Message.success(req_msg);\n                obj.status = req_rep;\n            } catch (error) {\n                this.$throw(error)\n            }\n            this.setting.loading = false;\n        },\n        /**\n         * @description 获取用户列表\n         */\n        async getData(){\n            this.setting.loading = true;\n            try {\n                let res = await post('/system/user/list',{\n                    page:this.dataFilter.page,\n                    pageSize:this.dataFilter.pageSize\n                })\n                this.data = res.data;\n            } catch (error) {\n                this.$throw(error)\n            }\n            this.setting.loading = false;\n        },\n        /**\n         * @description 获取角色列表\n         */\n        async getRoleList(){\n            try {\n                let res = await post('/system/role/list',{\n                    page:1,\n                    pageSize:1000\n                })\n                this.roles = res.data.records;\n            } catch (error) {\n                this.$throw(error)\n            }\n        },\n         /**\n         * @description 打开模态窗口\n         * @param uid 用户ID\n         * @param type 打开类型\n         */\n        openAddModal(uid,type = 'update'){\n            if(uid==null || type==='update'){\n                if(this.roles==null){\n                    this.getRoleList();\n                }\n            }\n            if(uid==null){\n                this.addUserModal = true;\n            }else if(type==='update'){\n                this.updateUserId = uid;\n                this.updateUserModal = true;\n            }else{\n                this.resetPasswordUser = uid;\n                this.resetPasswordModal = true;\n            }\n        },\n        /**\n         * @description 关闭模态窗口\n         * @param type 窗口类型\n         * @param reload 是否重新加载数据\n         */\n        onModalCancel(type,reload = false){\n            switch(type){\n                case 'add':{\n                    this.addUserModal = false;\n                };break;\n                case 'update':{\n                    this.updateUserModal = false;\n                };break;\n                case 'resetPassword':{\n                    this.resetPasswordModal = false;\n                };break;\n            }\n            if(reload) this.getData();\n        },\n        /**\n         * @description 导出表格CSV\n         */\n        exportData(type){\n            let rows = JSON.parse(JSON.stringify(this.data.records));\n            let records = rows;\n            rows && rows.forEach(e => {\n                let roles = \"\";\n                e.roles && e.roles.forEach(ee => {\n                    roles = ee.name + \" \";\n                });\n                e.roles = roles;\n                e.createDate = new Date(e.createDate).format(\"yyyy-MM-dd hh:mm:ss\")\n\n            });\n            if (type === 1) {\n                this.$refs.table.exportCsv({\n                    filename: '用户数据-'+new Date().getTime(),\n                    columns: this.columns.filter((col, index) => index > 1 && index < this.columns.length-1),\n                    data: records\n                });\n            }\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/view/system/user","sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <p slot=\"title\" class=\"card-title\">\r\n                <Icon type=\"home\"></Icon>\r\n                <span>用户管理</span>\r\n            </p>\r\n            <div>\r\n                <template>\r\n                    <Row>\r\n                        <Col span=\"15\">\r\n                            <Button type=\"info\" @click=\"openAddModal(null)\"><Icon type=\"md-add\"></Icon>&nbsp;添加用户</Button>\r\n                            <Button :disabled=\"setting.loading\" type=\"success\" @click=\"getData\"><Icon type=\"md-refresh\"></Icon>&nbsp;刷新数据</Button>\r\n                            <Button type=\"primary\" @click=\"exportData(1)\"><Icon type=\"ios-download-outline\"></Icon>&nbsp;导出表格</Button>\r\n                        </Col>\r\n                        <Col span=\"9\">\r\n                            <Input v-model=\"search.value\" placeholder=\"请输入您想要搜索的内容...\" class=\"margin-bottom-10\">\r\n                                <Button slot=\"append\" icon=\"ios-search\"></Button>\r\n                            </Input>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table ref=\"table\"  class=\"margin-bottom-10\"\r\n                         :columns=\"columns\" :loading=\"setting.loading\"  :border=\"setting.showBorder\" :data=\"data.records\"></Table>\r\n                    <Page :total=\"data.total\" class=\"tr\" @on-change=\"pageChange\" :current.sync=\"data.current\" :page-size=\"data.size\"\r\n                      @on-page-size-change=\"pageSizeChange\" show-elevator show-sizer></Page>\r\n                </template>\r\n            </div>\r\n        </Card>\r\n        <Modal v-model=\"removeModal\" width=\"360\">\r\n            <p slot=\"header\" style=\"color:#f60;text-align:center\">\r\n                <Icon type=\"information-circled\"></Icon>\r\n                <span>提示</span>\r\n            </p>\r\n            <div style=\"text-align:center\">\r\n                <p>此操作为不可逆操作，是否确认删除？</p>\r\n            </div>\r\n            <div slot=\"footer\">\r\n                <Button type=\"error\" size=\"large\" long :loading=\"setting.loading\" @click=\"removeUser\">确认删除</Button>\r\n            </div>\r\n        </Modal>\r\n        <AddUser v-if=\"addUserModal\" :roles=\"roles\" @cancel=\"onModalCancel\"/>\r\n        <UpdateUser v-if=\"updateUserModal\" :roles=\"roles\" :uid=\"updateUserId\" @cancel=\"onModalCancel\"/>\r\n        <ResetPassword v-if=\"resetPasswordModal\" :user=\"resetPasswordUser\" @cancel=\"onModalCancel\"/>\r\n    </div>\r\n</template>\r\n<script>\r\n    import dayjs from 'dayjs'\r\n    import { post } from '@/libs/axios-cfg'\r\n    import AddUser from './components/add.vue'\r\n    import UpdateUser from './components/update.vue'\r\n    import ResetPassword from './components/reset-password.vue'\r\n    export default {\r\n        data () {\r\n            return {\r\n                addUserModal:false,\r\n                updateUserModal:false,\r\n                resetPasswordModal:false,\r\n                updateUserId:null,\r\n                resetPasswordUser:null,\r\n                selections:[],\r\n                removeModal:false,\r\n                setting:{\r\n                    loading:true,\r\n                    showBorder:true\r\n                },\r\n                search:{\r\n                    type:'name',\r\n                    value:''\r\n                },\r\n                columns: [\r\n                    {title: 'ID', key: 'id',sortable: true, width: 180},\r\n                    {title: '用户名', key: 'username',sortable: true, width: 150},\r\n                    {title: '年龄',key: 'age',sortable: true, width: 80},\r\n                    {\r\n                        title: '状态',\r\n                        key: 'status',\r\n                        width: 100,\r\n                        render:(h,params)=>{\r\n                            return h('span',\r\n                                {\r\n                                    style: {color: params.row.status == 1 ? 'green' : 'red'\r\n                                }\r\n                            }, params.row.status == 1 ? '正常' : '锁定中')\r\n                        },\r\n                        sortable: true\r\n                    },\r\n                    {\r\n                        title: '角色组',\r\n                        key: 'roles',\r\n                        width: 250,\r\n                        render:(h,params)=>{\r\n                            let roles = []\r\n                            if(params.row.roles!=null && params.row.roles.length>0){\r\n                                params.row.roles.forEach(element => {\r\n                                    let role = h('Tag',{\r\n                                        props:{\r\n                                            color:\"blue\"\r\n                                        }\r\n                                    },element.name)\r\n                                    roles.push(role)\r\n                                });\r\n                                return h('div',roles)\r\n                            }\r\n                            return h('span','空')\r\n                        }\r\n                    },\r\n                    {\r\n                        title: '创建日期',\r\n                        key: 'createDate',\r\n                        width: 180,\r\n                        render:(h,params)=>{\r\n                            return h('span',dayjs(params.row.createDate).format('YYYY年MM月DD日 HH:mm:ss'))\r\n                        },\r\n                        sortable: true\r\n                    },\r\n                    {\r\n                        title: '操作',\r\n                        key: 'action',\r\n                        width: 260,\r\n                        align: 'center',\r\n                        fixed: 'right',\r\n                        render: (h, params) => {\r\n                            return h('div', [\r\n                                h('Button', {\r\n                                    props: {type: params.row.status == 1 ? 'success' : 'warning' ,size: 'small'},\r\n                                    style: {marginRight: '5px'},\r\n                                    on:{\r\n                                        click:()=>{\r\n                                            this.lockUser(params.row)\r\n                                        }\r\n                                    }\r\n                                }, params.row.status == 1 ? '锁定' : '恢复'),\r\n                                h('Button', {\r\n                                    props: {type: 'primary',size: 'small'},\r\n                                    style: {marginRight: '5px'},\r\n                                    on:{\r\n                                        click:()=>{\r\n                                            this.openAddModal(params.row.id)\r\n                                        }\r\n                                    }\r\n                                }, '修改'),\r\n                                h('Button', {\r\n                                    props: {type: 'info',size: 'small'},\r\n                                    style: {marginRight: '5px'},\r\n                                    on:{\r\n                                        click:()=>{\r\n                                            this.openAddModal(params.row,'resetPassword')\r\n                                        }\r\n                                    }\r\n                                }, '重置密码'),\r\n                                h('Button', {\r\n                                    props: {type: 'error',size: 'small'},\r\n                                    on:{\r\n                                        click:()=>{\r\n                                            this.removeObject = {\r\n                                                obj:params.row,\r\n                                                index:params.index\r\n                                            }\r\n                                            this.removeModal = true;\r\n                                        }\r\n                                    }\r\n                                }, '删除')\r\n                            ]);\r\n                        }\r\n                    }\r\n                ],\r\n                data: {},\r\n                dataFilter:{\r\n                    page:1,\r\n                    pageSize:10\r\n                },\r\n                removeObject:null,\r\n                roles:null\r\n            }\r\n        },\r\n        components:{\r\n            AddUser,UpdateUser,ResetPassword\r\n        },\r\n        created(){\r\n            this.getData();\r\n            this.getRoleList();\r\n        },\r\n        methods:{\r\n            /**\r\n             * @description 分页更换事件回调\r\n             */\r\n            pageChange(p){\r\n                this.dataFilter.page = p;\r\n                this.getData();\r\n            },\r\n            /**\r\n             * @description 分页每页显示数量改变事件回调\r\n             */\r\n            pageSizeChange(p){\r\n                this.dataFilter.pageSize = p;\r\n                this.getData();\r\n            },\r\n            /**\r\n             * @description 删除用户\r\n             */\r\n            async removeUser(){\r\n                this.removeModal = false;\r\n                if(this.removeObject==null){\r\n                    this.$Message.warning(\"删除对象为空，无法继续执行！\");\r\n                    return false;\r\n                }\r\n                this.setting.loading = true;\r\n                try {\r\n                    let res = await post('/system/user/remove/{uid}',null,{\r\n                        uid: this.removeObject.obj.id\r\n                    })\r\n                    this.$Message.success(\"删除成功\");\r\n                    this.data.records.splice(this.removeObject.index,1);\r\n                } catch (error) {\r\n                    this.$throw(error)\r\n                }\r\n                this.setting.loading = false;\r\n            },\r\n            /**\r\n             * @description 锁定/解锁用户\r\n             */\r\n            async lockUser(obj){\r\n                this.setting.loading = true;\r\n                let status = obj.status;\r\n                let req_url = status==1 ? 'lock' : 'unlock';\r\n                let req_rep = status==1 ? 0 : 1;\r\n                let req_msg = status==1 ? '已锁定' : '已解锁';\r\n                try {\r\n                    let res = await post('/system/user/{method}/{uid}',null,{\r\n                        uid: obj.id,\r\n                        method: req_url\r\n                    })\r\n                    this.$Message.destroy();\r\n                    this.$Message.success(req_msg);\r\n                    obj.status = req_rep;\r\n                } catch (error) {\r\n                    this.$throw(error)\r\n                }\r\n                this.setting.loading = false;\r\n            },\r\n            /**\r\n             * @description 获取用户列表\r\n             */\r\n            async getData(){\r\n                this.setting.loading = true;\r\n                try {\r\n                    let res = await post('/system/user/list',{\r\n                        page:this.dataFilter.page,\r\n                        pageSize:this.dataFilter.pageSize\r\n                    })\r\n                    this.data = res.data;\r\n                } catch (error) {\r\n                    this.$throw(error)\r\n                }\r\n                this.setting.loading = false;\r\n            },\r\n            /**\r\n             * @description 获取角色列表\r\n             */\r\n            async getRoleList(){\r\n                try {\r\n                    let res = await post('/system/role/list',{\r\n                        page:1,\r\n                        pageSize:1000\r\n                    })\r\n                    this.roles = res.data.records;\r\n                } catch (error) {\r\n                    this.$throw(error)\r\n                }\r\n            },\r\n             /**\r\n             * @description 打开模态窗口\r\n             * @param uid 用户ID\r\n             * @param type 打开类型\r\n             */\r\n            openAddModal(uid,type = 'update'){\r\n                if(uid==null || type==='update'){\r\n                    if(this.roles==null){\r\n                        this.getRoleList();\r\n                    }\r\n                }\r\n                if(uid==null){\r\n                    this.addUserModal = true;\r\n                }else if(type==='update'){\r\n                    this.updateUserId = uid;\r\n                    this.updateUserModal = true;\r\n                }else{\r\n                    this.resetPasswordUser = uid;\r\n                    this.resetPasswordModal = true;\r\n                }\r\n            },\r\n            /**\r\n             * @description 关闭模态窗口\r\n             * @param type 窗口类型\r\n             * @param reload 是否重新加载数据\r\n             */\r\n            onModalCancel(type,reload = false){\r\n                switch(type){\r\n                    case 'add':{\r\n                        this.addUserModal = false;\r\n                    };break;\r\n                    case 'update':{\r\n                        this.updateUserModal = false;\r\n                    };break;\r\n                    case 'resetPassword':{\r\n                        this.resetPasswordModal = false;\r\n                    };break;\r\n                }\r\n                if(reload) this.getData();\r\n            },\r\n            /**\r\n             * @description 导出表格CSV\r\n             */\r\n            exportData(type){\r\n                let rows = JSON.parse(JSON.stringify(this.data.records));\r\n                let records = rows;\r\n                rows && rows.forEach(e => {\r\n                    let roles = \"\";\r\n                    e.roles && e.roles.forEach(ee => {\r\n                        roles = ee.name + \" \";\r\n                    });\r\n                    e.roles = roles;\r\n                    e.createDate = new Date(e.createDate).format(\"yyyy-MM-dd hh:mm:ss\")\r\n\r\n                });\r\n                if (type === 1) {\r\n                    this.$refs.table.exportCsv({\r\n                        filename: '用户数据-'+new Date().getTime(),\r\n                        columns: this.columns.filter((col, index) => index > 1 && index < this.columns.length-1),\r\n                        data: records\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}