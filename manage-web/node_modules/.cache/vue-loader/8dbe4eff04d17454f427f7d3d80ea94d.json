{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\upload-img\\upload-img.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\upload-img\\upload-img.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    name: \"upload-img\",\n    props: {\n        src: {\n            type: String,\n            default: \"\"\n        },\n    },\n    data() {\n        return {\n            actionUrl: this.baseUrl + \"/system/fdfs/upload/image\",\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Authorization': localStorage.getItem('csrf-token')\n            },\n            imgUrl: this.baseImgUrl + this.imgSrc,\n            imgSrc: this.src,\n            credentials: true\n        }\n    },\n    watch: {\n        imgSrc(value) {\n            this.$emit('changeSrc', value)\n        },\n        src(value) {\n            this.imgSrc = value;\n            this.imgUrl = this.baseImgUrl + this.imgSrc;\n        }\n    },\n    methods: {\n        handleSuccess(res, file) {\n            this.imgSrc = res.data.filePath;\n            this.imgUrl = this.baseImgUrl + res.data.filePath;\n        }\n    }\n}\n",{"version":3,"sources":["upload-img.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload-img.vue","sourceRoot":"src/view/main/components/upload-img","sourcesContent":["<template>\r\n    <div>\r\n        <Upload :headers=\"headers\" :action=actionUrl :with-credentials=true\r\n                :on-success=\"handleSuccess\">\r\n            <template v-if=\"imgSrc\">\r\n                <img :src=\"imgUrl\" width=\"150px\" height=\"100px\">\r\n            </template>\r\n            <template v-else>\r\n                <Button icon=\"ios-cloud-upload-outline\">上传图片</Button>\r\n            </template>\r\n        </Upload>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        name: \"upload-img\",\r\n        props: {\r\n            src: {\r\n                type: String,\r\n                default: \"\"\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                actionUrl: this.baseUrl + \"/system/fdfs/upload/image\",\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': localStorage.getItem('csrf-token')\r\n                },\r\n                imgUrl: this.baseImgUrl + this.imgSrc,\r\n                imgSrc: this.src,\r\n                credentials: true\r\n            }\r\n        },\r\n        watch: {\r\n            imgSrc(value) {\r\n                this.$emit('changeSrc', value)\r\n            },\r\n            src(value) {\r\n                this.imgSrc = value;\r\n                this.imgUrl = this.baseImgUrl + this.imgSrc;\r\n            }\r\n        },\r\n        methods: {\r\n            handleSuccess(res, file) {\r\n                this.imgSrc = res.data.filePath;\r\n                this.imgUrl = this.baseImgUrl + res.data.filePath;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}