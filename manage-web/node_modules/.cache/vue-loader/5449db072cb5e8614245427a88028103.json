{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\user\\index.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport {get, post} from \"../../libs/axios-cfg\";\n\nexport default {\n    name: \"index\",\n    data() {\n        // 验证手机号是否被占用\n        const validatePhone = async (rule, value, callback) => {\n            if (!value) {\n                return callback(new Error('手机号不能为空'));\n            }\n            try {\n                let res = await get('api/pomelomgm/user/phone/verify?phone=' + value + '&userId=' + this.form.user.id);\n                if (res.data) {\n                    callback(new Error('该手机号已被注册, 请勿重复'));\n                }\n            } catch (error) {\n                callback(error)\n            }\n        };\n\n        return {\n            option: {\n                statuss: [\n                    {value: \"Y\", label: \"正常\"},\n                    {value: \"N\", label: \"冻结\"}\n                ],\n                market: [],\n                chookCls: []\n            },\n            search: {\n                userId: null,\n                username: null,\n                phone: null,\n                parentUserId: null,\n                parentUserName: null,\n                regStartDate: null,\n                regEndDate: null,\n                dateRange: [],\n                status: null,\n                page: 1,\n                pageSize: 10\n            },\n            content: {\n                loading: false,\n                records: [],\n                columns: [\n                    {\n                        title: 'ID',\n                        key: 'id',\n                        width: 80,\n                    },\n                    {\n                        title: '用户名',\n                        key: 'username',\n                        width: 150,\n                    },\n                    {\n                        title: '电话',\n                        key: 'phone',\n                        width: 120,\n                    },\n                    {\n                        title: '大米',\n                        key: 'riceAmount',\n                        width: 120,\n                    },\n                    {\n                        title: '小米',\n                        key: 'milletAmount',\n                        width: 120,\n                    },\n                    {\n                        title: '总资产',\n                        key: 'totalAssets',\n                        width: 120,\n                    },\n                    {\n                        title: 'EC币',\n                        key: 'ecAmount',\n                        width: 120,\n                    },\n                    {\n                        title: '领养中鸡数',\n                        key: 'chookCount',\n                        width: 120,\n                        render: (h, params) => {\n                            if (!params.row.chookCount) {\n                                return h('span', {}, '0');\n                            }\n                            return h('a', {\n                                on: {\n                                    click: () => {\n                                        this.handleToUserChook(params.row.id);\n                                    }\n                                }\n                            }, params.row.chookCount);\n                        }\n                    },\n                    {\n                        title: '团队人数',\n                        key: 'userCount',\n                        width: 120,\n                        render: (h, params) => {\n                            return h('a', {\n                                on: {\n                                    click: () => {\n                                        this.handleToTeamUser(params.row.id);\n                                    }\n                                }\n                            }, params.row.userCount);\n                        }\n                    },\n                    {\n                        title: '推荐人ID',\n                        key: 'parentUserId',\n                        width: 90,\n                    },\n                    {\n                        title: '推荐人名称',\n                        key: 'parentUserName',\n                        width: 150,\n                    },\n                    {\n                        title: '优先级别',\n                        key: 'rank',\n                        width: 100,\n                    },\n                    {\n                        title: '注册时间',\n                        key: 'createTime',\n                        width: 170,\n                    },\n                    {\n                        title: '状态',\n                        key: 'status',\n                        width: 120,\n                        render: (h, params) => {\n                            let status = \"正常\";\n                            if (params.row.status.value == 'N') {\n                                status = \"冻结\";\n                            }\n                            return h('span', {}, status);\n                        }\n                    },\n                    {\n                        title: 'EOS账号',\n                        key: 'accountNo',\n                        width: 120,\n                    },\n                    {\n                        title: 'EOS收币二维码',\n                        key: 'qrCode',\n                        width: 180,\n                        render: (h, params) => {\n                            if (params.row.qrCode) {\n                                let imgUrl = this.baseImgUrl + params.row.qrCode;\n                                return h('img', {\n                                    attrs: {\n                                        src: imgUrl,\n                                    },\n                                    style: {\n                                        width: '80px',\n                                        height: '80px'\n                                    },\n                                    on: {\n                                        click: (e) => {\n                                            this.handleBigImg(e.srcElement.currentSrc)\n                                        }\n                                    }\n                                }, '类别icon');\n                            } else {\n                                return h('Icon', {\n                                    attrs: {\n                                        size: 80,\n                                        type: \"ios-image-outline\"\n                                    }\n                                });\n                            }\n                        }\n                    },\n                    {\n                        title: '操作',\n                        key: 'action',\n                        width: 280,\n                        align: 'center',\n                        fixed: 'right',\n                        render: (h, params) => {\n                            return h('div', [\n                                h('Button', {\n                                    props: {\n                                        type: 'info',\n                                        size: 'small'\n                                    },\n                                    style: {\n                                        marginRight: '5px'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.handleAddChook(params.row)\n                                        }\n                                    }\n                                }, '送鸡'),\n                                h('Button', {\n                                    props: {\n                                        type: 'primary',\n                                        size: 'small'\n                                    },\n                                    style: {\n                                        marginRight: '5px'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.handleEdit(params.row)\n                                        }\n                                    }\n                                }, '编辑'),\n                                h('Button', {\n                                    props: {\n                                        type: 'warning',\n                                        size: 'small'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.handleEditAccount(params.row)\n                                        }\n                                    }\n                                }, '账户操作'),\n                                h('Button', {\n                                    props: {\n                                        type: 'error',\n                                        size: 'small'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.handleEditPwd(params.row)\n                                        }\n                                    }\n                                }, '设置密码')\n                            ]);\n                        }\n                    }\n                ],\n                total: 0\n            },\n            form: {\n                title: '修改用户信息',\n                isAdd: false,\n                show: false,\n                user: {\n                    status: null\n                },\n                ruleValidate: {\n                    username: [\n                        {required: true, message: '用户名不能为空', trigger: 'blur'}\n                    ],\n                    phone: [\n                        {validator: validatePhone, required: true, trigger: 'blur'}\n                    ]\n                }\n            },\n            formAccount: {\n                title: '大米小米操作',\n                show: false,\n                oper: {\n                    typeLabel: '小米',\n                    operateLabel: '增加',\n                    value: null,\n                    remark: null\n                },\n                user: {},\n                ruleValidate: {\n                    value: [\n                        {required: true, message: '操作数值不能为空', trigger: 'blur'}\n                    ],\n                    remark: [\n                        {required: true, message: '操作备注不能为空', trigger: 'blur'}\n                    ]\n                }\n            },\n            formAddChook: {\n                title: \"给用户添加柚子鸡\",\n                show: false,\n                oper: {\n                    marketId: null,\n                    chookClsId: null,\n                    value: null\n                },\n                user: {},\n                ruleValidate: {\n                    marketId: [\n                        {required: true, message: '请选择集市', trigger: 'change', type: 'number'}\n                    ],\n                    chookClsId: [\n                        {required: true, message: '请选择柚子鸡', trigger: 'change', type: 'number'}\n                    ]\n                }\n            },\n            formSetPwd: {\n                title: \"设置密码\",\n                show: false,\n                oper: {\n                    userId: null,\n                    pwdType: '登录密码',\n                    oldPassword: null,\n                    password: null,\n                    rePassword: null,\n                },\n                user: {},\n                ruleValidate: {\n                    password: [\n                        {required: true, message: '请输入密码', trigger: 'blur'}\n                    ],\n                    rePassword: [\n                        {required: true, message: '请输入确认密码', trigger: 'blur'}\n                    ],\n                }\n            },\n            img: {\n                visible: false,\n                url: ''\n            },\n        }\n    },\n    created() {\n        this.queryUser();\n        this.queryAllMarket();\n    },\n    methods: {\n        handleBigImg(url) {\n            this.img.url = url;\n            this.img.visible = true;\n        },\n        handleSearch() {\n            this.queryUser();\n        },\n        handleToUserChook(userId) {\n            this.$router.push(\"/user/chook/list?userId=\" + userId);\n        },\n        handleToTeamUser(userId) {\n            this.$router.push(\"/team/user/list?userId=\" + userId);\n        },\n        handleChangePage(page) {\n            this.search.page = page;\n            this.queryUser();\n        },\n        handleChangePageSize(pageSize) {\n            this.search.pageSize = pageSize;\n            this.queryUser();\n        },\n        handleAddChook(row) {\n            this.formAddChook.show = true;\n            this.formAddChook.user = row;\n            this.formAddChook.oper = {};\n        },\n        handleEdit(row) {\n            this.form.title = \"修改用户信息\";\n            this.form.isAdd = false;\n            this.form.show = true;\n            this.form.user = row;\n            this.form.user.status = this.form.user.status.value;\n        },\n        handleEditAccount(row) {\n            this.formAccount.user = row;\n            this.formAccount.show = true;\n            this.formAccount.oper = {\n                typeLabel: '小米',\n                operateLabel: '增加',\n                value: null,\n                remark: null\n            };\n        },\n        handleEditPwd(row) {\n            this.formSetPwd.user = row;\n            this.formSetPwd.show = true;\n            this.formSetPwd.oper = {\n                userId: row.id,\n                pwdType: '登录密码'\n            };\n        },\n        handleChangeMarket(marketId) {\n            if (marketId) {\n                this.queryChookClsByMarketId(marketId);\n            } else {\n                this.option.chookCls = [];\n                this.formAddChook.oper.chookClsId = null;\n            }\n        },\n        handleSubmit(name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    if (this.form.isAdd) {\n                        this.$Message.error(\"操作暂不支持\");\n                    } else {\n                        this.updateUser();\n                    }\n                    this.form.show = false;\n                    setTimeout(this.queryUser, 1000)\n                } else {\n                    this.$Message.error('验证不通过!')\n                }\n            })\n        },\n        handleReset(name) {\n            this.$refs[name].resetFields()\n        },\n        handleSubmitAddChook(name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    let chookCls = null;\n                    for (let i = 0; i < this.option.chookCls.length; i++) {\n                        if (this.option.chookCls[i].id == this.formAddChook.oper.chookClsId) {\n                            chookCls = this.option.chookCls[i];\n                            break;\n                        }\n                    };\n                    if (chookCls && this.formAddChook.oper.value) {\n                        if (chookCls.minValue > this.formAddChook.oper.value || chookCls.maxValue <= this.formAddChook.oper.value) {\n                            this.$Message.error(\"您输入的价值不在该柚子鸡的价值范围内!\");\n                            return;\n                        }\n                    }\n                    this.createChookObj();\n                    this.formAddChook.show = false;\n                    setTimeout(this.queryUser, 1000);\n                } else {\n                    this.$Message.error('验证不通过!')\n                }\n            })\n        },\n        handleSubmitSetPwd(name) {\n            console.info(this.formSetPwd);\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    if (this.formSetPwd.oper.password !== this.formSetPwd.oper.rePassword) {\n                        this.$Message.error(\"确认密码不一致, 请重新输入\");\n                        return;\n                    }\n                    if (this.formSetPwd.oper.pwdType == \"登录密码\") {\n                        this.settingUpPassword(this.formSetPwd.oper.userId, 1, this.formSetPwd.oper.password);\n                    } else if (this.formSetPwd.oper.pwdType == \"交易密码\") {\n                        this.settingUpPassword(this.formSetPwd.oper.userId, 2, this.formSetPwd.oper.password);\n                    }\n                    this.formSetPwd.show = false;\n                } else {\n                    this.$Message.error('验证不通过');\n                }\n            });\n        },\n        handleSubmitAcctOper(name) {\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    switch (this.formAccount.oper.typeLabel) {\n                        case \"小米\":\n                            this.formAccount.oper['accountType'] = 'MILLET';\n                            break;\n                        case \"团队大米\":\n                            this.formAccount.oper['accountType'] = 'TEAMRICE';\n                            break;\n                        case \"推荐大米\":\n                            this.formAccount.oper['accountType'] = 'RECOMMENDRICE';\n                            break;\n                    }\n                    switch (this.formAccount.oper.operateLabel) {\n                        case \"增加\":\n                            this.formAccount.oper['tradeDire'] = 'I';\n                            break;\n                        case \"减少\":\n                            this.formAccount.oper['tradeDire'] = 'O';\n                            break;\n                    }\n                    this.formAccount.oper['userId'] = this.formAccount.user.id;\n                    this.formAccount.oper['accountId'] = this.formAccount.user.accountId;\n                    this.operAccount();\n                    this.formAccount.show = false;\n                }\n            });\n        },\n        async operAccount() {\n            try {\n                let res = await post(\"api/pomelomgm/account/operate\", this.formAccount.oper);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"操作成功\");\n                    this.queryUser();\n                } else {\n                    this.$Message.error(res.msg);\n                }\n                this.formAccount.oper = {\n                    typeLabel: '小米',\n                    operateLabel: '增加',\n                    value: null,\n                    remark: null\n                };\n                this.formAccount.user = {};\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async updateUser() {\n            try {\n                let res = await post(\"api/pomelomgm/user/update/\" + this.form.user.id, this.form.user);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"更新成功\");\n                } else {\n                    this.$Message.error(res.msg);\n                }\n                this.queryUser();\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async queryUser() {\n            if (this.search.dateRange && this.search.dateRange.length == 2) {\n                if (this.search.dateRange[0] != \"\") {\n                    this.search.regStartDate = this.search.dateRange[0].format(\"yyyy-MM-dd hh:mm:ss\");\n                } else {\n                    this.search.regStartDate = null;\n                }\n                if (this.search.dateRange[1] != \"\") {\n                    this.search.regEndDate = this.search.dateRange[1].format(\"yyyy-MM-dd hh:mm:ss\");\n                } else {\n                    this.search.regEndDate = null;\n                }\n            }\n            this.content.loading = true;\n            try {\n                let res = await post(\"api/pomelomgm/user/list\", this.search);\n                if (res.status == 1) {\n                    this.content.total = res.data.total;\n                    this.content.records = res.data.records;\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n            this.content.loading = false;\n        },\n        async queryAllMarket() {\n            try {\n                let res = await get(\"api/pomelomgm/market/list/all\");\n                if (res.status == 1) {\n                    this.option.market = res.data;\n                } else {\n                    this.option.market = [];\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async queryChookClsByMarketId(marketId) {\n            try {\n                let res = await post(\"api/pomelomgm/chook/cls/list\", {marketId: marketId, status: 'Y'});\n                if (res.status == this.rescode.OK) {\n                    this.option.chookCls = res.data.records;\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async createChookObj() {\n            console.info(this.formAddChook.oper);\n            try {\n                let res = await get(`api/pomelomgm/user/create/chookobj?userId=${this.formAddChook.user.id}&chookClsId=${this.formAddChook.oper.chookClsId}&value=${this.formAddChook.oper.value && this.formAddChook.oper.value != null ? this.formAddChook.oper.value : ''}`);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"创建柚子鸡成功\");\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async settingUpPassword(userId, passwordType, password) {\n            let md5Password = this.$md5(password);\n            try {\n                let res = await get(`api/pomelomgm/user/setting-up-password?userId=${userId}&passwordType=${passwordType}&password=${md5Password}`);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"密码设置成功\");\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/view/user","sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <!-- 条件查询 -->\r\n            <div class=\"margin-bottom-10\">\r\n                <Row>\r\n                    <Col span=\"6\">\r\n                        <label>用户ID: </label>\r\n                        <Input v-model=\"search.userId\" placeholder=\"请输入用户ID\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>用户名: </label>\r\n                        <Input v-model=\"search.username\" placeholder=\"请输入用户名称\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>手机号: </label>\r\n                        <Input v-model=\"search.phone\" placeholder=\"请输入手机号码\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>推荐人ID: </label>\r\n                        <Input v-model=\"search.parentUserId\" placeholder=\"请输入推荐人ID\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row class=\"margin-top-10\">\r\n                    <Col span=\"6\">\r\n                        <label>推荐人名称: </label>\r\n                        <Input v-model=\"search.parentUserName\" placeholder=\"请输入用户ID\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>注册时间: </label>\r\n                        <DatePicker v-model=\"search.dateRange\" format=\"yyyy-MM-dd\" type=\"daterange\"\r\n                                    placement=\"bottom-end\"\r\n                                    placeholder=\"选择注册时间范围\" style=\"width: 200px\"></DatePicker>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>状态: </label>\r\n                        <Select v-model=\"search.status\" placeholder=\"请选择状态\" style=\"width:200px\" clearable>\r\n                            <Option v-for=\"item in option.statuss\" :value=\"item.value\" :key=\"item.value\">{{\r\n                                item.label}}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <Button type=\"success\" icon=\"ios-search\" @click=\"handleSearch\">查询</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <!-- 数据展示 -->\r\n            <div class=\"user-list\" style=\"overflow: hidden\">\r\n                <Table border :loading=\"content.loading\" :columns=\"content.columns\" :data=\"content.records\"></Table>\r\n                <div class=\"margin-top-8\"></div>\r\n                <Page :total=\"content.total\" @on-change=\"handleChangePage\" @on-page-size-change=\"handleChangePageSize\"\r\n                      show-sizer show-total show-elevator class=\"margin-right-10\"\r\n                      style=\"display: inline-flex;float: right;\"/>\r\n            </div>\r\n\r\n            <!-- 新增修改 -->\r\n            <Drawer class=\"add-update-drawer\"\r\n                    :title=\"form.title\"\r\n                    v-model=\"form.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <Form :model=\"form.user\" ref=\"formUser\" :rules=\"form.ruleValidate\" style=\"margin-right: 30px\">\r\n                    <FormItem label=\"用户名: \" label-position=\"left\" :label-width=\"80\" prop=\"username\">\r\n                        <Input v-model=\"form.user.username\" placeholder=\"请输入用户名称\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"电话号码: \" label-position=\"left\" :label-width=\"80\" prop=\"phone\">\r\n                        <Input v-model=\"form.user.phone\" placeholder=\"请输入电话号码\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"优先级别: \" label-position=\"left\" :label-width=\"80\" prop=\"rank\">\r\n                        <Rate :count=10 v-model=\"form.user.rank\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"状态: \" label-position=\"left\" :label-width=\"80\" prop=\"status\">\r\n                        <Select v-model=\"form.user.status\" placeholder=\"请选择状态\" style=\"width:200px\">\r\n                            <Option v-for=\"item in option.statuss\" :value=\"item.value\" :key=\"item.value\">{{\r\n                                item.label}}\r\n                            </Option>\r\n                        </Select>\r\n                    </FormItem>\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmit('formUser')\">提交</Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formUser')\">重置</Button>\r\n                    </FormItem>\r\n\r\n                </Form>\r\n            </Drawer>\r\n\r\n            <!-- 设置密码 -->\r\n            <Drawer class=\"add-update-drawer\"\r\n                    :title=\"formSetPwd.title\"\r\n                    v-model=\"formSetPwd.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <div class=\"margin-bottom-10\">\r\n                    <p style=\"font-size: 18px\">当前用户: &nbsp;&nbsp;{{formSetPwd.user.username}}</p>\r\n                    <p style=\"font-size: 18px\">当前手机号: &nbsp;&nbsp;{{formSetPwd.user.phone}}</p>\r\n                </div>\r\n                <Form :model=\"formSetPwd.oper\" ref=\"formSetPwd\" :rules=\"formSetPwd.ruleValidate\"\r\n                      style=\"margin-right: 30px\">\r\n                    <FormItem label=\"密码类型: \" label-position=\"left\" :label-width=\"80\" prop=\"type\">\r\n                        <RadioGroup v-model=\"formSetPwd.oper.pwdType\" type=\"button\" size=\"small\">\r\n                            <Radio label=\"登录密码\"></Radio>\r\n                            <Radio label=\"交易密码\"></Radio>\r\n                        </RadioGroup>\r\n                    </FormItem>\r\n                    <!--<FormItem label=\"旧密码: \" label-position=\"left\" :label-width=\"80\" prop=\"oldPassword\">-->\r\n                    <!--<Input v-model=\"formSetPwd.oper.oldPassword\" placeholder=\"请输入旧密码\" style=\"width: 300px\"/>-->\r\n                    <!--</FormItem>-->\r\n                    <FormItem label=\"新密码: \" label-position=\"left\" :label-width=\"80\" prop=\"password\">\r\n                        <Input v-model=\"formSetPwd.oper.password\" placeholder=\"请输入新密码\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"确认密码: \" label-position=\"left\" :label-width=\"80\" prop=\"rePassword\">\r\n                        <Input v-model=\"formSetPwd.oper.rePassword\" placeholder=\"请确认新密码\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmitSetPwd('formSetPwd')\">提交\r\n                        </Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formSetPwd')\">重置</Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Drawer>\r\n\r\n            <!-- 大米小米操作 -->\r\n            <Drawer class=\"add-update-drawer\"\r\n                    :title=\"formAccount.title\"\r\n                    v-model=\"formAccount.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <div class=\"margin-bottom-10\">\r\n                    <p style=\"font-size: 18px\">当前用户: &nbsp;&nbsp;{{formAccount.user.username}}</p>\r\n                    <p style=\"font-size: 18px\">当前手机号: &nbsp;&nbsp;{{formAccount.user.phone}}</p>\r\n                    <p style=\"font-size: 18px\">当前大米值: &nbsp;&nbsp;{{formAccount.user.riceAmount}}</p>\r\n                    <p style=\"font-size: 18px\">当前小米值: &nbsp;&nbsp;{{formAccount.user.milletAmount}}</p>\r\n                </div>\r\n                <Form :model=\"formAccount.oper\" ref=\"formUserAcct\" :rules=\"formAccount.ruleValidate\"\r\n                      style=\"margin-right: 30px\">\r\n                    <FormItem label=\"状态: \" label-position=\"left\" :label-width=\"80\" prop=\"status\">\r\n                        <RadioGroup v-model=\"formAccount.oper.typeLabel\" type=\"button\" size=\"small\">\r\n                            <Radio label=\"小米\"></Radio>\r\n                            <Radio label=\"团队大米\"></Radio>\r\n                            <Radio label=\"推荐大米\"></Radio>\r\n                        </RadioGroup>\r\n                    </FormItem>\r\n                    <FormItem label=\"操作: \" label-position=\"left\" :label-width=\"80\" prop=\"status\">\r\n                        <RadioGroup v-model=\"formAccount.oper.operateLabel\" type=\"button\" size=\"small\">\r\n                            <Radio label=\"增加\"></Radio>\r\n                            <Radio label=\"减少\"></Radio>\r\n                        </RadioGroup>\r\n                    </FormItem>\r\n                    <FormItem label=\"数量(增减): \" label-position=\"left\" :label-width=\"80\" prop=\"value\">\r\n                        <Input v-model=\"formAccount.oper.value\" placeholder=\"请输入操作的数值\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"操作备注: \" label-position=\"left\" :label-width=\"80\" prop=\"remark\">\r\n                        <Input v-model=\"formAccount.oper.remark\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入备注信息\"\r\n                               style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmitAcctOper('formUserAcct')\">\r\n                            提交\r\n                        </Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formUserAcct')\">重置</Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Drawer>\r\n\r\n            <!-- 送鸡操作 -->\r\n            <Drawer class=\"add-update-drawer\"\r\n                    :title=\"formAddChook.title\"\r\n                    v-model=\"formAddChook.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <Form :model=\"formAddChook.oper\" ref=\"formAddChook\" :rules=\"formAddChook.ruleValidate\"\r\n                      style=\"margin-right: 30px\">\r\n                    <FormItem label=\"集市: \" label-position=\"left\" :label-width=\"80\" prop=\"marketId\">\r\n                        <Select v-model=\"formAddChook.oper.marketId\" style=\"width:200px\" placeholder=\"请选择集市\"\r\n                                @on-change=\"handleChangeMarket\" clearable>\r\n                            <Option v-for=\"maket in option.market\" :value=\"maket.id\" :key=\"maket.id\">{{ maket.name }}\r\n                            </Option>\r\n                        </Select>\r\n                    </FormItem>\r\n                    <FormItem label=\"柚子鸡: \" label-position=\"left\" :label-width=\"80\" prop=\"chookClsId\">\r\n                        <Select v-model=\"formAddChook.oper.chookClsId\" style=\"width:200px\" placeholder=\"请选择柚子鸡\"\r\n                                clearable>\r\n                            <Option v-for=\"chookCls in option.chookCls\" :value=\"chookCls.id\" :key=\"chookCls.id\" :label=\"chookCls.name\">\r\n                                <span>{{ chookCls.name }}</span>\r\n                                <span style=\"float:right;color:#ccc\">【{{chookCls.minValue}}-{{chookCls.maxValue}}】</span>\r\n                            </Option>\r\n                        </Select>\r\n                    </FormItem>\r\n                    <FormItem label=\"价值: \" label-position=\"left\" :label-width=\"80\" prop=\"value\">\r\n                        <Input v-model.number=\"formAddChook.oper.value\" placeholder=\"请输入赠送鸡的价值(默认为起始价值)\"\r\n                               style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmitAddChook('formAddChook')\">\r\n                            提交\r\n                        </Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formAddChook')\">重置</Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Drawer>\r\n\r\n            <!-- 大图查看 -->\r\n            <Modal title=\"查看大图\" v-model=\"img.visible\" class-name=\"fl-image-modal\">\r\n                <img :src=\"img.url\" v-if=\"img.visible\" style=\"width: 100%\">\r\n            </Modal>\r\n\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import {get, post} from \"../../libs/axios-cfg\";\r\n\r\n    export default {\r\n        name: \"index\",\r\n        data() {\r\n            // 验证手机号是否被占用\r\n            const validatePhone = async (rule, value, callback) => {\r\n                if (!value) {\r\n                    return callback(new Error('手机号不能为空'));\r\n                }\r\n                try {\r\n                    let res = await get('api/pomelomgm/user/phone/verify?phone=' + value + '&userId=' + this.form.user.id);\r\n                    if (res.data) {\r\n                        callback(new Error('该手机号已被注册, 请勿重复'));\r\n                    }\r\n                } catch (error) {\r\n                    callback(error)\r\n                }\r\n            };\r\n\r\n            return {\r\n                option: {\r\n                    statuss: [\r\n                        {value: \"Y\", label: \"正常\"},\r\n                        {value: \"N\", label: \"冻结\"}\r\n                    ],\r\n                    market: [],\r\n                    chookCls: []\r\n                },\r\n                search: {\r\n                    userId: null,\r\n                    username: null,\r\n                    phone: null,\r\n                    parentUserId: null,\r\n                    parentUserName: null,\r\n                    regStartDate: null,\r\n                    regEndDate: null,\r\n                    dateRange: [],\r\n                    status: null,\r\n                    page: 1,\r\n                    pageSize: 10\r\n                },\r\n                content: {\r\n                    loading: false,\r\n                    records: [],\r\n                    columns: [\r\n                        {\r\n                            title: 'ID',\r\n                            key: 'id',\r\n                            width: 80,\r\n                        },\r\n                        {\r\n                            title: '用户名',\r\n                            key: 'username',\r\n                            width: 150,\r\n                        },\r\n                        {\r\n                            title: '电话',\r\n                            key: 'phone',\r\n                            width: 120,\r\n                        },\r\n                        {\r\n                            title: '大米',\r\n                            key: 'riceAmount',\r\n                            width: 120,\r\n                        },\r\n                        {\r\n                            title: '小米',\r\n                            key: 'milletAmount',\r\n                            width: 120,\r\n                        },\r\n                        {\r\n                            title: '总资产',\r\n                            key: 'totalAssets',\r\n                            width: 120,\r\n                        },\r\n                        {\r\n                            title: 'EC币',\r\n                            key: 'ecAmount',\r\n                            width: 120,\r\n                        },\r\n                        {\r\n                            title: '领养中鸡数',\r\n                            key: 'chookCount',\r\n                            width: 120,\r\n                            render: (h, params) => {\r\n                                if (!params.row.chookCount) {\r\n                                    return h('span', {}, '0');\r\n                                }\r\n                                return h('a', {\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.handleToUserChook(params.row.id);\r\n                                        }\r\n                                    }\r\n                                }, params.row.chookCount);\r\n                            }\r\n                        },\r\n                        {\r\n                            title: '团队人数',\r\n                            key: 'userCount',\r\n                            width: 120,\r\n                            render: (h, params) => {\r\n                                return h('a', {\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.handleToTeamUser(params.row.id);\r\n                                        }\r\n                                    }\r\n                                }, params.row.userCount);\r\n                            }\r\n                        },\r\n                        {\r\n                            title: '推荐人ID',\r\n                            key: 'parentUserId',\r\n                            width: 90,\r\n                        },\r\n                        {\r\n                            title: '推荐人名称',\r\n                            key: 'parentUserName',\r\n                            width: 150,\r\n                        },\r\n                        {\r\n                            title: '优先级别',\r\n                            key: 'rank',\r\n                            width: 100,\r\n                        },\r\n                        {\r\n                            title: '注册时间',\r\n                            key: 'createTime',\r\n                            width: 170,\r\n                        },\r\n                        {\r\n                            title: '状态',\r\n                            key: 'status',\r\n                            width: 120,\r\n                            render: (h, params) => {\r\n                                let status = \"正常\";\r\n                                if (params.row.status.value == 'N') {\r\n                                    status = \"冻结\";\r\n                                }\r\n                                return h('span', {}, status);\r\n                            }\r\n                        },\r\n                        {\r\n                            title: 'EOS账号',\r\n                            key: 'accountNo',\r\n                            width: 120,\r\n                        },\r\n                        {\r\n                            title: 'EOS收币二维码',\r\n                            key: 'qrCode',\r\n                            width: 180,\r\n                            render: (h, params) => {\r\n                                if (params.row.qrCode) {\r\n                                    let imgUrl = this.baseImgUrl + params.row.qrCode;\r\n                                    return h('img', {\r\n                                        attrs: {\r\n                                            src: imgUrl,\r\n                                        },\r\n                                        style: {\r\n                                            width: '80px',\r\n                                            height: '80px'\r\n                                        },\r\n                                        on: {\r\n                                            click: (e) => {\r\n                                                this.handleBigImg(e.srcElement.currentSrc)\r\n                                            }\r\n                                        }\r\n                                    }, '类别icon');\r\n                                } else {\r\n                                    return h('Icon', {\r\n                                        attrs: {\r\n                                            size: 80,\r\n                                            type: \"ios-image-outline\"\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            title: '操作',\r\n                            key: 'action',\r\n                            width: 280,\r\n                            align: 'center',\r\n                            fixed: 'right',\r\n                            render: (h, params) => {\r\n                                return h('div', [\r\n                                    h('Button', {\r\n                                        props: {\r\n                                            type: 'info',\r\n                                            size: 'small'\r\n                                        },\r\n                                        style: {\r\n                                            marginRight: '5px'\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.handleAddChook(params.row)\r\n                                            }\r\n                                        }\r\n                                    }, '送鸡'),\r\n                                    h('Button', {\r\n                                        props: {\r\n                                            type: 'primary',\r\n                                            size: 'small'\r\n                                        },\r\n                                        style: {\r\n                                            marginRight: '5px'\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.handleEdit(params.row)\r\n                                            }\r\n                                        }\r\n                                    }, '编辑'),\r\n                                    h('Button', {\r\n                                        props: {\r\n                                            type: 'warning',\r\n                                            size: 'small'\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.handleEditAccount(params.row)\r\n                                            }\r\n                                        }\r\n                                    }, '账户操作'),\r\n                                    h('Button', {\r\n                                        props: {\r\n                                            type: 'error',\r\n                                            size: 'small'\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.handleEditPwd(params.row)\r\n                                            }\r\n                                        }\r\n                                    }, '设置密码')\r\n                                ]);\r\n                            }\r\n                        }\r\n                    ],\r\n                    total: 0\r\n                },\r\n                form: {\r\n                    title: '修改用户信息',\r\n                    isAdd: false,\r\n                    show: false,\r\n                    user: {\r\n                        status: null\r\n                    },\r\n                    ruleValidate: {\r\n                        username: [\r\n                            {required: true, message: '用户名不能为空', trigger: 'blur'}\r\n                        ],\r\n                        phone: [\r\n                            {validator: validatePhone, required: true, trigger: 'blur'}\r\n                        ]\r\n                    }\r\n                },\r\n                formAccount: {\r\n                    title: '大米小米操作',\r\n                    show: false,\r\n                    oper: {\r\n                        typeLabel: '小米',\r\n                        operateLabel: '增加',\r\n                        value: null,\r\n                        remark: null\r\n                    },\r\n                    user: {},\r\n                    ruleValidate: {\r\n                        value: [\r\n                            {required: true, message: '操作数值不能为空', trigger: 'blur'}\r\n                        ],\r\n                        remark: [\r\n                            {required: true, message: '操作备注不能为空', trigger: 'blur'}\r\n                        ]\r\n                    }\r\n                },\r\n                formAddChook: {\r\n                    title: \"给用户添加柚子鸡\",\r\n                    show: false,\r\n                    oper: {\r\n                        marketId: null,\r\n                        chookClsId: null,\r\n                        value: null\r\n                    },\r\n                    user: {},\r\n                    ruleValidate: {\r\n                        marketId: [\r\n                            {required: true, message: '请选择集市', trigger: 'change', type: 'number'}\r\n                        ],\r\n                        chookClsId: [\r\n                            {required: true, message: '请选择柚子鸡', trigger: 'change', type: 'number'}\r\n                        ]\r\n                    }\r\n                },\r\n                formSetPwd: {\r\n                    title: \"设置密码\",\r\n                    show: false,\r\n                    oper: {\r\n                        userId: null,\r\n                        pwdType: '登录密码',\r\n                        oldPassword: null,\r\n                        password: null,\r\n                        rePassword: null,\r\n                    },\r\n                    user: {},\r\n                    ruleValidate: {\r\n                        password: [\r\n                            {required: true, message: '请输入密码', trigger: 'blur'}\r\n                        ],\r\n                        rePassword: [\r\n                            {required: true, message: '请输入确认密码', trigger: 'blur'}\r\n                        ],\r\n                    }\r\n                },\r\n                img: {\r\n                    visible: false,\r\n                    url: ''\r\n                },\r\n            }\r\n        },\r\n        created() {\r\n            this.queryUser();\r\n            this.queryAllMarket();\r\n        },\r\n        methods: {\r\n            handleBigImg(url) {\r\n                this.img.url = url;\r\n                this.img.visible = true;\r\n            },\r\n            handleSearch() {\r\n                this.queryUser();\r\n            },\r\n            handleToUserChook(userId) {\r\n                this.$router.push(\"/user/chook/list?userId=\" + userId);\r\n            },\r\n            handleToTeamUser(userId) {\r\n                this.$router.push(\"/team/user/list?userId=\" + userId);\r\n            },\r\n            handleChangePage(page) {\r\n                this.search.page = page;\r\n                this.queryUser();\r\n            },\r\n            handleChangePageSize(pageSize) {\r\n                this.search.pageSize = pageSize;\r\n                this.queryUser();\r\n            },\r\n            handleAddChook(row) {\r\n                this.formAddChook.show = true;\r\n                this.formAddChook.user = row;\r\n                this.formAddChook.oper = {};\r\n            },\r\n            handleEdit(row) {\r\n                this.form.title = \"修改用户信息\";\r\n                this.form.isAdd = false;\r\n                this.form.show = true;\r\n                this.form.user = row;\r\n                this.form.user.status = this.form.user.status.value;\r\n            },\r\n            handleEditAccount(row) {\r\n                this.formAccount.user = row;\r\n                this.formAccount.show = true;\r\n                this.formAccount.oper = {\r\n                    typeLabel: '小米',\r\n                    operateLabel: '增加',\r\n                    value: null,\r\n                    remark: null\r\n                };\r\n            },\r\n            handleEditPwd(row) {\r\n                this.formSetPwd.user = row;\r\n                this.formSetPwd.show = true;\r\n                this.formSetPwd.oper = {\r\n                    userId: row.id,\r\n                    pwdType: '登录密码'\r\n                };\r\n            },\r\n            handleChangeMarket(marketId) {\r\n                if (marketId) {\r\n                    this.queryChookClsByMarketId(marketId);\r\n                } else {\r\n                    this.option.chookCls = [];\r\n                    this.formAddChook.oper.chookClsId = null;\r\n                }\r\n            },\r\n            handleSubmit(name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        if (this.form.isAdd) {\r\n                            this.$Message.error(\"操作暂不支持\");\r\n                        } else {\r\n                            this.updateUser();\r\n                        }\r\n                        this.form.show = false;\r\n                        setTimeout(this.queryUser, 1000)\r\n                    } else {\r\n                        this.$Message.error('验证不通过!')\r\n                    }\r\n                })\r\n            },\r\n            handleReset(name) {\r\n                this.$refs[name].resetFields()\r\n            },\r\n            handleSubmitAddChook(name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        let chookCls = null;\r\n                        for (let i = 0; i < this.option.chookCls.length; i++) {\r\n                            if (this.option.chookCls[i].id == this.formAddChook.oper.chookClsId) {\r\n                                chookCls = this.option.chookCls[i];\r\n                                break;\r\n                            }\r\n                        };\r\n                        if (chookCls && this.formAddChook.oper.value) {\r\n                            if (chookCls.minValue > this.formAddChook.oper.value || chookCls.maxValue <= this.formAddChook.oper.value) {\r\n                                this.$Message.error(\"您输入的价值不在该柚子鸡的价值范围内!\");\r\n                                return;\r\n                            }\r\n                        }\r\n                        this.createChookObj();\r\n                        this.formAddChook.show = false;\r\n                        setTimeout(this.queryUser, 1000);\r\n                    } else {\r\n                        this.$Message.error('验证不通过!')\r\n                    }\r\n                })\r\n            },\r\n            handleSubmitSetPwd(name) {\r\n                console.info(this.formSetPwd);\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        if (this.formSetPwd.oper.password !== this.formSetPwd.oper.rePassword) {\r\n                            this.$Message.error(\"确认密码不一致, 请重新输入\");\r\n                            return;\r\n                        }\r\n                        if (this.formSetPwd.oper.pwdType == \"登录密码\") {\r\n                            this.settingUpPassword(this.formSetPwd.oper.userId, 1, this.formSetPwd.oper.password);\r\n                        } else if (this.formSetPwd.oper.pwdType == \"交易密码\") {\r\n                            this.settingUpPassword(this.formSetPwd.oper.userId, 2, this.formSetPwd.oper.password);\r\n                        }\r\n                        this.formSetPwd.show = false;\r\n                    } else {\r\n                        this.$Message.error('验证不通过');\r\n                    }\r\n                });\r\n            },\r\n            handleSubmitAcctOper(name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        switch (this.formAccount.oper.typeLabel) {\r\n                            case \"小米\":\r\n                                this.formAccount.oper['accountType'] = 'MILLET';\r\n                                break;\r\n                            case \"团队大米\":\r\n                                this.formAccount.oper['accountType'] = 'TEAMRICE';\r\n                                break;\r\n                            case \"推荐大米\":\r\n                                this.formAccount.oper['accountType'] = 'RECOMMENDRICE';\r\n                                break;\r\n                        }\r\n                        switch (this.formAccount.oper.operateLabel) {\r\n                            case \"增加\":\r\n                                this.formAccount.oper['tradeDire'] = 'I';\r\n                                break;\r\n                            case \"减少\":\r\n                                this.formAccount.oper['tradeDire'] = 'O';\r\n                                break;\r\n                        }\r\n                        this.formAccount.oper['userId'] = this.formAccount.user.id;\r\n                        this.formAccount.oper['accountId'] = this.formAccount.user.accountId;\r\n                        this.operAccount();\r\n                        this.formAccount.show = false;\r\n                    }\r\n                });\r\n            },\r\n            async operAccount() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/account/operate\", this.formAccount.oper);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"操作成功\");\r\n                        this.queryUser();\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                    this.formAccount.oper = {\r\n                        typeLabel: '小米',\r\n                        operateLabel: '增加',\r\n                        value: null,\r\n                        remark: null\r\n                    };\r\n                    this.formAccount.user = {};\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async updateUser() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/user/update/\" + this.form.user.id, this.form.user);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"更新成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                    this.queryUser();\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async queryUser() {\r\n                if (this.search.dateRange && this.search.dateRange.length == 2) {\r\n                    if (this.search.dateRange[0] != \"\") {\r\n                        this.search.regStartDate = this.search.dateRange[0].format(\"yyyy-MM-dd hh:mm:ss\");\r\n                    } else {\r\n                        this.search.regStartDate = null;\r\n                    }\r\n                    if (this.search.dateRange[1] != \"\") {\r\n                        this.search.regEndDate = this.search.dateRange[1].format(\"yyyy-MM-dd hh:mm:ss\");\r\n                    } else {\r\n                        this.search.regEndDate = null;\r\n                    }\r\n                }\r\n                this.content.loading = true;\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/user/list\", this.search);\r\n                    if (res.status == 1) {\r\n                        this.content.total = res.data.total;\r\n                        this.content.records = res.data.records;\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n                this.content.loading = false;\r\n            },\r\n            async queryAllMarket() {\r\n                try {\r\n                    let res = await get(\"api/pomelomgm/market/list/all\");\r\n                    if (res.status == 1) {\r\n                        this.option.market = res.data;\r\n                    } else {\r\n                        this.option.market = [];\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async queryChookClsByMarketId(marketId) {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/chook/cls/list\", {marketId: marketId, status: 'Y'});\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.option.chookCls = res.data.records;\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async createChookObj() {\r\n                console.info(this.formAddChook.oper);\r\n                try {\r\n                    let res = await get(`api/pomelomgm/user/create/chookobj?userId=${this.formAddChook.user.id}&chookClsId=${this.formAddChook.oper.chookClsId}&value=${this.formAddChook.oper.value && this.formAddChook.oper.value != null ? this.formAddChook.oper.value : ''}`);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"创建柚子鸡成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async settingUpPassword(userId, passwordType, password) {\r\n                let md5Password = this.$md5(password);\r\n                try {\r\n                    let res = await get(`api/pomelomgm/user/setting-up-password?userId=${userId}&passwordType=${passwordType}&password=${md5Password}`);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"密码设置成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}