{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\side-menu\\side-menu.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\side-menu\\side-menu.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\less-loader\\dist\\cjs.js","mtime":1562925151962},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './side-menu.less';\n",{"version":3,"sources":["side-menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA","file":"side-menu.vue","sourceRoot":"src/view/main/components/side-menu","sourcesContent":["<template>\r\n    <div class=\"side-menu-wrapper\">\r\n        <slot></slot>\r\n        <Menu ref=\"menu\" v-show=\"!collapsed\" :active-name=\"activeName\" :open-names=\"openedNames\" :accordion=\"accordion\"\r\n              :theme=\"theme\" width=\"auto\" @on-select=\"handleSelect\">\r\n            <template v-for=\"item in menuList\">\r\n                <template v-if=\"item.children && item.children.length === 1\">\r\n                    <side-menu-item v-if=\"showChildren(item)\" :key=\"`menu-${item.name}`\"\r\n                                    :parent-item=\"item\"></side-menu-item>\r\n                    <menu-item v-else :name=\"getNameOrHref(item, true)\" :key=\"`menu-${item.children[0].name}`\">\r\n                        <common-icon :type=\"item.children[0].icon || ''\"/>\r\n                        <span>{{ showTitle(item.children[0]) }}</span></menu-item>\r\n                </template>\r\n                <template v-else>\r\n                    <side-menu-item v-if=\"showChildren(item)\" :key=\"`menu-${item.name}`\"\r\n                                    :parent-item=\"item\"></side-menu-item>\r\n                    <menu-item v-else :name=\"getNameOrHref(item)\" :key=\"`menu-${item.name}`\">\r\n                        <common-icon :type=\"item.icon || ''\"/>\r\n                        <span>{{ showTitle(item) }}</span></menu-item>\r\n                </template>\r\n            </template>\r\n        </Menu>\r\n        <div class=\"menu-collapsed\" v-show=\"collapsed\" :list=\"menuList\">\r\n            <template v-for=\"item in menuList\">\r\n                <collapsed-menu v-if=\"item.children && item.children.length > 1\" @on-click=\"handleSelect\" hide-title\r\n                                :root-icon-size=\"rootIconSize\" :icon-size=\"iconSize\" :theme=\"theme\" :parent-item=\"item\"\r\n                                :key=\"`drop-menu-${item.name}`\"></collapsed-menu>\r\n                <Tooltip transfer v-else\r\n                         :content=\"(item.meta && item.meta.title) || (item.children && item.children[0] && item.children[0].meta.title)\"\r\n                         placement=\"right\" :key=\"`drop-menu-${item.name}`\">\r\n                    <a @click=\"handleSelect(getNameOrHref(item, true))\" class=\"drop-menu-a\"\r\n                       :style=\"{textAlign: 'center'}\">\r\n                        <common-icon :size=\"rootIconSize\" :color=\"textColor\"\r\n                                     :type=\"item.icon || (item.children && item.children[0].icon)\"/>\r\n                    </a>\r\n                </Tooltip>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import SideMenuItem from './side-menu-item.vue'\r\n    import CollapsedMenu from './collapsed-menu.vue'\r\n    import {getUnion} from '@/libs/tools'\r\n    import mixin from './mixin'\r\n\r\n    export default {\r\n        name: 'SideMenu',\r\n        mixins: [mixin],\r\n        components: {\r\n            SideMenuItem,\r\n            CollapsedMenu\r\n        },\r\n        props: {\r\n            menuList: {\r\n                type: Array,\r\n                default() {\r\n                    return []\r\n                }\r\n            },\r\n            collapsed: {\r\n                type: Boolean\r\n            },\r\n            theme: {\r\n                type: String,\r\n                default: 'dark'\r\n            },\r\n            rootIconSize: {\r\n                type: Number,\r\n                default: 20\r\n            },\r\n            iconSize: {\r\n                type: Number,\r\n                default: 16\r\n            },\r\n            accordion: Boolean,\r\n            activeName: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            openNames: {\r\n                type: Array,\r\n                default: () => []\r\n            }\r\n        },\r\n        created() {\r\n        },\r\n        data() {\r\n            return {\r\n                openedNames: []\r\n            }\r\n        },\r\n        methods: {\r\n            handleSelect(name) {\r\n                this.$emit('on-select', name)\r\n            },\r\n            getOpenedNamesByActiveName(name) {\r\n                return this.$route.matched.map(item => item.name).filter(item => item !== name)\r\n            },\r\n            updateOpenName(name) {\r\n                if (name === 'home') this.openedNames = []\r\n                else this.openedNames = this.getOpenedNamesByActiveName(name)\r\n            }\r\n        },\r\n        computed: {\r\n            textColor() {\r\n                return this.theme === 'dark' ? '#fff' : '#495060'\r\n            }\r\n        },\r\n        watch: {\r\n            activeName(name) {\r\n                if (this.accordion) this.openedNames = this.getOpenedNamesByActiveName(name)\r\n                else this.openedNames = getUnion(this.openedNames, this.getOpenedNamesByActiveName(name))\r\n            },\r\n            openNames(newNames) {\r\n                this.openedNames = newNames\r\n            },\r\n            openedNames() {\r\n                this.$nextTick(() => {\r\n                    this.$refs.menu.updateOpened()\r\n                })\r\n            }\r\n        },\r\n        mounted() {\r\n            this.openedNames = getUnion(this.openedNames, this.getOpenedNamesByActiveName(name))\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"less\">\r\n    @import './side-menu.less';\r\n</style>\r\n"]}]}