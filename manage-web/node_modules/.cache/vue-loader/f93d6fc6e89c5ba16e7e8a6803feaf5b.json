{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\trade\\subscribe.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\trade\\subscribe.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {get, post} from \"../../libs/axios-cfg\";\n\nexport default {\n    name: \"subscribe\",\n    data() {\n        return {\n            option: {\n                msgTypes: [\n                    {id: 'SYS', name: '系统消息'},\n                    {id: 'ACT', name: '活动消息'},\n                ],\n                market: [],\n                chookCls: []\n            },\n            search: {\n                page: 1,\n                pageSize: 10,\n                username: null,\n                phone: null,\n                startDate: null,\n                endDate: null,\n                marketId: null,\n                chookClsId: null,\n                dateRange: []\n            },\n            content: {\n                loading: false,\n                total: 0,\n                records: [],\n                columns: [\n                    {\n                        title: '预约ID',\n                        key: 'id',\n                        width: 100\n                    },\n                    {\n                        title: '用户名',\n                        key: 'username',\n                    },\n                    {\n                        title: '手机号',\n                        key: 'phone',\n                    },\n                    {\n                        title: '柚子鸡',\n                        key: 'chookName',\n                    },\n                    {\n                        title: '预约时间',\n                        key: 'createTime',\n                    }\n                ]\n            },\n            form: {\n                title: \"新增系统消息\",\n                show: false,\n                isAdd: true,\n                record: {},\n                ruleValidate: {\n                    title: [\n                        {required: true, message: '请输入系统消息', trigger: 'blur'}\n                    ],\n                    publishDate: [\n                        {required: true, message: '请选择公告日期', trigger: 'change', type: 'date'}\n                    ],\n                    msgType: [\n                        {required: true, message: '请选择消息类型', trigger: 'change'}\n                    ],\n                    content: [\n                        {required: true, message: '请输入消息内容', trigger: 'blur'}\n                    ],\n                }\n            }\n        }\n    },\n    created() {\n        this.queryRecords();\n        this.queryAllMarket();\n    },\n    methods: {\n        handleSearch() {\n            console.info(this.search);\n            if (this.search.dateRange && this.search.dateRange.length == 2) {\n                if (this.search.dateRange[0] != \"\") {\n                    this.search.startDate = this.search.dateRange[0];\n                }\n                if (this.search.dateRange[1] != \"\") {\n                    this.search.endDate = this.search.dateRange[1];\n                }\n            }\n            this.queryRecords();\n        },\n        handleChangeMarket(marketId) {\n            if (marketId) {\n                this.queryChookClsByMarketId(marketId);\n            } else {\n                this.option.chookCls = [];\n                this.search.chookClsId = null;\n            }\n        },\n        handleCreate() {\n            this.form.title = \"新增系统消息\";\n            this.form.isAdd = true;\n            this.form.record = {};\n            this.form.show = true;\n        },\n        handleEidt(row) {\n            this.form.title = \"更新系统消息\";\n            this.form.isAdd = false;\n            this.form.record = JSON.parse(JSON.stringify(row));\n            if (this.form.record.msgType) {\n                this.form.record.msgType = this.form.record.msgType.value;\n            }\n            this.form.show = true;\n        },\n        handleRemove(row) {\n            this.$Modal.confirm({\n                title: '提醒',\n                content: '<p>确认删除系统消息?</p>',\n                onOk: () => {\n                    this.deleteSysMsg(row.id);\n                    setTimeout(this.querySysMsg, 1000);\n                },\n                onCancel: () => {\n                    this.$Message.info('取消删除操作');\n                }\n            });\n        },\n        handleChangePage(page) {\n            this.search.page = page;\n            this.queryRecords();\n        },\n        handleChangePageSize(pageSize) {\n            this.search.pageSize = pageSize;\n            this.queryRecords();\n        },\n        handleSubmit(name) {\n            var self = this;\n            this.$refs[name].validate((valid) => {\n                if (valid) {\n                    if (self.form.isAdd) {\n                        this.createSysMsg();\n                    } else {\n                        this.updateSysMsg();\n                    }\n                    this.form.show = false;\n                    setTimeout(this.querySysMsg, 1000);\n                } else {\n                    this.$Message.error('验证不通过!');\n                }\n            })\n        },\n        handleReset(name) {\n            this.$refs[name].resetFields();\n        },\n        async queryRecords() {\n            this.content.loading = true;\n            try {\n                let res = await post('api/pomelomgm/subscribe/list', this.search);\n                if (res.status == this.rescode.OK) {\n                    this.content.total = res.data.total;\n                    this.content.records = res.data.records;\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n            this.content.loading = false;\n        },\n        async createSysMsg() {\n            try {\n                let res = await post(\"api/pomelomgm/sysmsg/add\", this.form.record);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"新增成功\");\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async updateSysMsg() {\n            try {\n                let res = await post(\"api/pomelomgm/sysmsg/update/\" + this.form.record.id, this.form.record);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"更新成功\");\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async deleteSysMsg(id) {\n            try {\n                let res = await post(\"api/pomelomgm/sysmsg/remove/\" + id);\n                if (res.status == this.rescode.OK) {\n                    this.$Message.success(\"删除成功\");\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async queryAllMarket() {\n            try {\n                let res = await get(\"api/pomelomgm/market/list/all\");\n                if (res.status == 1) {\n                    this.option.market = res.data;\n                } else {\n                    this.option.market = [];\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n        async queryChookClsByMarketId(marketId) {\n            try {\n                let res = await post(\"api/pomelomgm/chook/cls/list\", {marketId: marketId, status: 'Y'});\n                if (res.status == this.rescode.OK) {\n                    this.option.chookCls = res.data.records;\n                } else {\n                    this.$Message.error(res.msg);\n                }\n            } catch (e) {\n                this.$throw(e);\n            }\n        },\n    }\n}\n",{"version":3,"sources":["subscribe.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"subscribe.vue","sourceRoot":"src/view/trade","sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <!-- 条件查询 -->\r\n            <div class=\"margin-bottom-10\">\r\n                <Row class=\"margin-bottom-10\">\r\n                    <Col span=\"6\">\r\n                        <label>用户名: </label>\r\n                        <Input v-model=\"search.username\" placeholder=\"请输入用户名\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>手机号: </label>\r\n                        <Input v-model=\"search.phone\" placeholder=\"请输入手机号\" style=\"width: 200px\"/>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>预约时间: </label>\r\n                        <DatePicker v-model=\"search.dateRange\" type=\"daterange\" placement=\"bottom-end\"\r\n                                    placeholder=\"选择公告日期\" style=\"width: 200px\" clearable/>\r\n                    </Col>\r\n                </Row>\r\n                <Row class=\"margin-bottom-10\">\r\n                    <Col span=\"6\">\r\n                        <label>集市: </label>\r\n                        <Select v-model=\"search.marketId\" style=\"width:200px\" placeholder=\"请选择集市\"\r\n                                @on-change=\"handleChangeMarket\" clearable>\r\n                            <Option v-for=\"maket in option.market\" :value=\"maket.id\" :key=\"maket.id\">{{ maket.name }}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>柚子鸡: </label>\r\n                        <Select v-model=\"search.chookClsId\" style=\"width:200px\" placeholder=\"请选择柚子鸡\"\r\n                                clearable>\r\n                            <Option v-for=\"chookCls in option.chookCls\" :value=\"chookCls.id\" :key=\"chookCls.id\" :label=\"chookCls.name\">\r\n                                <span>{{ chookCls.name }}</span>\r\n                                <span style=\"float:right;color:#ccc\">【{{chookCls.minValue}}-{{chookCls.maxValue}}】</span>\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <Button type=\"success\" icon=\"ios-search\" @click=\"handleSearch\">查询</Button>\r\n                        <!--<Button type=\"info\" icon=\"md-add\" @click=\"handleCreate\">新增</Button>-->\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <!-- 数据展示 -->\r\n            <div class=\"chook-cls-list\" style=\"overflow: hidden\">\r\n                <Table border :loading=\"content.loading\" :columns=\"content.columns\" :data=\"content.records\"></Table>\r\n                <div class=\"margin-top-8\"></div>\r\n                <Page :total=\"content.total\" @on-change=\"handleChangePage\" @on-page-size-change=\"handleChangePageSize\"\r\n                      show-sizer show-total show-elevator class=\"margin-right-10\"\r\n                      style=\"display: inline-flex;float: right;\"/>\r\n            </div>\r\n\r\n            <!-- 新增删除 -->\r\n            <Drawer class=\"add-update-drawer\"\r\n                    :title=\"form.title\"\r\n                    v-model=\"form.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <Form :model=\"form.record\" ref=\"formRecord\" :rules=\"form.ruleValidate\" style=\"margin-right: 30px\">\r\n                    <FormItem label=\"标题: \" label-position=\"left\" :label-width=\"100\" prop=\"title\">\r\n                        <Input v-model=\"form.record.title\" placeholder=\"请输入消息标题\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"公告日期: \" label-position=\"left\" :label-width=\"100\" prop=\"publishDate\">\r\n                        <DatePicker v-model=\"form.record.publishDate\" type=\"date\" placeholder=\"请选择公告日期\"\r\n                                    style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"消息类型: \" label-position=\"left\" :label-width=\"100\" prop=\"msgType\">\r\n                        <Select v-model=\"form.record.msgType\" style=\"width:200px\" placeholder=\"请选择集市\" clearable>\r\n                            <Option v-for=\"msgType in option.msgTypes\" :value=\"msgType.id\" :key=\"msgType.id\">\r\n                                {{msgType.name }}\r\n                            </Option>\r\n                        </Select>\r\n                    </FormItem>\r\n                    <FormItem label=\"消息内容: \" label-position=\"left\" :label-width=\"100\" prop=\"content\">\r\n                        <Input v-model=\"form.record.content\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\"\r\n                               placeholder=\"请输入消息内容\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"备注: \" label-position=\"left\" :label-width=\"100\" prop=\"remark\">\r\n                        <Input v-model=\"form.record.remark\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\"\r\n                               placeholder=\"请输入备注\"/>\r\n                    </FormItem>\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmit('formRecord')\">提交\r\n                        </Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formRecord')\">重置</Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Drawer>\r\n\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {get, post} from \"../../libs/axios-cfg\";\r\n\r\n    export default {\r\n        name: \"subscribe\",\r\n        data() {\r\n            return {\r\n                option: {\r\n                    msgTypes: [\r\n                        {id: 'SYS', name: '系统消息'},\r\n                        {id: 'ACT', name: '活动消息'},\r\n                    ],\r\n                    market: [],\r\n                    chookCls: []\r\n                },\r\n                search: {\r\n                    page: 1,\r\n                    pageSize: 10,\r\n                    username: null,\r\n                    phone: null,\r\n                    startDate: null,\r\n                    endDate: null,\r\n                    marketId: null,\r\n                    chookClsId: null,\r\n                    dateRange: []\r\n                },\r\n                content: {\r\n                    loading: false,\r\n                    total: 0,\r\n                    records: [],\r\n                    columns: [\r\n                        {\r\n                            title: '预约ID',\r\n                            key: 'id',\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: '用户名',\r\n                            key: 'username',\r\n                        },\r\n                        {\r\n                            title: '手机号',\r\n                            key: 'phone',\r\n                        },\r\n                        {\r\n                            title: '柚子鸡',\r\n                            key: 'chookName',\r\n                        },\r\n                        {\r\n                            title: '预约时间',\r\n                            key: 'createTime',\r\n                        }\r\n                    ]\r\n                },\r\n                form: {\r\n                    title: \"新增系统消息\",\r\n                    show: false,\r\n                    isAdd: true,\r\n                    record: {},\r\n                    ruleValidate: {\r\n                        title: [\r\n                            {required: true, message: '请输入系统消息', trigger: 'blur'}\r\n                        ],\r\n                        publishDate: [\r\n                            {required: true, message: '请选择公告日期', trigger: 'change', type: 'date'}\r\n                        ],\r\n                        msgType: [\r\n                            {required: true, message: '请选择消息类型', trigger: 'change'}\r\n                        ],\r\n                        content: [\r\n                            {required: true, message: '请输入消息内容', trigger: 'blur'}\r\n                        ],\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.queryRecords();\r\n            this.queryAllMarket();\r\n        },\r\n        methods: {\r\n            handleSearch() {\r\n                console.info(this.search);\r\n                if (this.search.dateRange && this.search.dateRange.length == 2) {\r\n                    if (this.search.dateRange[0] != \"\") {\r\n                        this.search.startDate = this.search.dateRange[0];\r\n                    }\r\n                    if (this.search.dateRange[1] != \"\") {\r\n                        this.search.endDate = this.search.dateRange[1];\r\n                    }\r\n                }\r\n                this.queryRecords();\r\n            },\r\n            handleChangeMarket(marketId) {\r\n                if (marketId) {\r\n                    this.queryChookClsByMarketId(marketId);\r\n                } else {\r\n                    this.option.chookCls = [];\r\n                    this.search.chookClsId = null;\r\n                }\r\n            },\r\n            handleCreate() {\r\n                this.form.title = \"新增系统消息\";\r\n                this.form.isAdd = true;\r\n                this.form.record = {};\r\n                this.form.show = true;\r\n            },\r\n            handleEidt(row) {\r\n                this.form.title = \"更新系统消息\";\r\n                this.form.isAdd = false;\r\n                this.form.record = JSON.parse(JSON.stringify(row));\r\n                if (this.form.record.msgType) {\r\n                    this.form.record.msgType = this.form.record.msgType.value;\r\n                }\r\n                this.form.show = true;\r\n            },\r\n            handleRemove(row) {\r\n                this.$Modal.confirm({\r\n                    title: '提醒',\r\n                    content: '<p>确认删除系统消息?</p>',\r\n                    onOk: () => {\r\n                        this.deleteSysMsg(row.id);\r\n                        setTimeout(this.querySysMsg, 1000);\r\n                    },\r\n                    onCancel: () => {\r\n                        this.$Message.info('取消删除操作');\r\n                    }\r\n                });\r\n            },\r\n            handleChangePage(page) {\r\n                this.search.page = page;\r\n                this.queryRecords();\r\n            },\r\n            handleChangePageSize(pageSize) {\r\n                this.search.pageSize = pageSize;\r\n                this.queryRecords();\r\n            },\r\n            handleSubmit(name) {\r\n                var self = this;\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        if (self.form.isAdd) {\r\n                            this.createSysMsg();\r\n                        } else {\r\n                            this.updateSysMsg();\r\n                        }\r\n                        this.form.show = false;\r\n                        setTimeout(this.querySysMsg, 1000);\r\n                    } else {\r\n                        this.$Message.error('验证不通过!');\r\n                    }\r\n                })\r\n            },\r\n            handleReset(name) {\r\n                this.$refs[name].resetFields();\r\n            },\r\n            async queryRecords() {\r\n                this.content.loading = true;\r\n                try {\r\n                    let res = await post('api/pomelomgm/subscribe/list', this.search);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.content.total = res.data.total;\r\n                        this.content.records = res.data.records;\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n                this.content.loading = false;\r\n            },\r\n            async createSysMsg() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/sysmsg/add\", this.form.record);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"新增成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async updateSysMsg() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/sysmsg/update/\" + this.form.record.id, this.form.record);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"更新成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async deleteSysMsg(id) {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/sysmsg/remove/\" + id);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"删除成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async queryAllMarket() {\r\n                try {\r\n                    let res = await get(\"api/pomelomgm/market/list/all\");\r\n                    if (res.status == 1) {\r\n                        this.option.market = res.data;\r\n                    } else {\r\n                        this.option.market = [];\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async queryChookClsByMarketId(marketId) {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/chook/cls/list\", {marketId: marketId, status: 'Y'});\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.option.chookCls = res.data.records;\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}