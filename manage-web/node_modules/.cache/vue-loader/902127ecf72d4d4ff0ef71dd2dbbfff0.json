{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\tags-nav\\tags-nav.vue?vue&type=template&id=6ca839ca&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\tags-nav\\tags-nav.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"tags-nav\">\n  <ul v-show=\"visible\" :style=\"{left: contextMenuLeft + 'px', top: contextMenuTop + 'px'}\" class=\"contextmenu\">\n    <li v-for=\"(item, key) of menuList\" @click=\"handleTagsOption(key)\" :key=\"key\">{{item}}</li>\n  </ul>\n  <div class=\"btn-con left-btn\">\n    <Button type=\"text\" @click=\"handleScroll(240)\">\n      <Icon :size=\"18\" type=\"ios-arrow-back\" />\n    </Button>\n  </div>\n  <div class=\"btn-con right-btn\">\n    <Button type=\"text\" @click=\"handleScroll(-240)\">\n      <Icon :size=\"18\" type=\"ios-arrow-forward\" />\n    </Button>\n  </div>\n  <div class=\"scroll-outer\" ref=\"scrollOuter\" @DOMMouseScroll=\"handlescroll\" @mousewheel=\"handlescroll\">\n    <div ref=\"scrollBody\" class=\"scroll-body\" :style=\"{left: tagBodyLeft + 'px'}\">\n      <transition-group name=\"taglist-moving-animation\">\n        <Tag\n          type=\"dot\"\n          v-for=\"(item, index) in list\"\n          ref=\"tagsPageOpened\"\n          :key=\"`tag-nav-${index}`\"\n          :name=\"item.name\"\n          @on-close=\"handleClose(item)\"\n          @click.native=\"handleClick(item)\"\n          :closable=\"item.name !== 'home'\"\n          :color=\"isCurrentTag(item) ? 'primary' : 'default'\"\n          @contextmenu.prevent.native=\"contextMenu(item, $event)\"\n        >{{ showTitleInside(item) }}</Tag>\n      </transition-group>\n    </div>\n  </div>\n</div>\n",null]}