{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\fullscreen\\fullscreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\fullscreen\\fullscreen.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Fullscreen',\n  computed: {\n    showFullScreenBtn() {\n      return window.navigator.userAgent.indexOf('MSIE') < 0;\n    }\n\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    handleFullscreen() {\n      let main = document.body;\n\n      if (this.value) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      } else {\n        if (main.requestFullscreen) {\n          main.requestFullscreen();\n        } else if (main.mozRequestFullScreen) {\n          main.mozRequestFullScreen();\n        } else if (main.webkitRequestFullScreen) {\n          main.webkitRequestFullScreen();\n        } else if (main.msRequestFullscreen) {\n          main.msRequestFullscreen();\n        }\n      }\n    },\n\n    handleChange() {\n      this.handleFullscreen();\n    }\n\n  },\n\n  mounted() {\n    let isFullscreen = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\n    isFullscreen = !!isFullscreen;\n    document.addEventListener('fullscreenchange', () => {\n      this.$emit('input', !this.value);\n      this.$emit('on-change', !this.value);\n    });\n    document.addEventListener('mozfullscreenchange', () => {\n      this.$emit('input', !this.value);\n      this.$emit('on-change', !this.value);\n    });\n    document.addEventListener('webkitfullscreenchange', () => {\n      this.$emit('input', !this.value);\n      this.$emit('on-change', !this.value);\n    });\n    document.addEventListener('msfullscreenchange', () => {\n      this.$emit('input', !this.value);\n      this.$emit('on-change', !this.value);\n    });\n    this.$emit('input', isFullscreen);\n  }\n\n};",{"version":3,"sources":["fullscreen.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAAA;AACA;;AAHA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAPA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,gBAAA,GAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,IAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,YAAA,QAAA,CAAA,cAAA,EAAA;AACA,UAAA,QAAA,CAAA,cAAA;AACA,SAFA,MAEA,IAAA,QAAA,CAAA,mBAAA,EAAA;AACA,UAAA,QAAA,CAAA,mBAAA;AACA,SAFA,MAEA,IAAA,QAAA,CAAA,sBAAA,EAAA;AACA,UAAA,QAAA,CAAA,sBAAA;AACA,SAFA,MAEA,IAAA,QAAA,CAAA,gBAAA,EAAA;AACA,UAAA,QAAA,CAAA,gBAAA;AACA;AACA,OAVA,MAUA;AACA,YAAA,IAAA,CAAA,iBAAA,EAAA;AACA,UAAA,IAAA,CAAA,iBAAA;AACA,SAFA,MAEA,IAAA,IAAA,CAAA,oBAAA,EAAA;AACA,UAAA,IAAA,CAAA,oBAAA;AACA,SAFA,MAEA,IAAA,IAAA,CAAA,uBAAA,EAAA;AACA,UAAA,IAAA,CAAA,uBAAA;AACA,SAFA,MAEA,IAAA,IAAA,CAAA,mBAAA,EAAA;AACA,UAAA,IAAA,CAAA,mBAAA;AACA;AACA;AACA,KAxBA;;AAyBA,IAAA,YAAA,GAAA;AACA,WAAA,gBAAA;AACA;;AA3BA,GAbA;;AA0CA,EAAA,OAAA,GAAA;AACA,QAAA,YAAA,GAAA,QAAA,CAAA,iBAAA,IAAA,QAAA,CAAA,oBAAA,IAAA,QAAA,CAAA,uBAAA,IAAA,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,aAAA,IAAA,QAAA,CAAA,kBAAA;AACA,IAAA,YAAA,GAAA,CAAA,CAAA,YAAA;AACA,IAAA,QAAA,CAAA,gBAAA,CAAA,kBAAA,EAAA,MAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,KAAA,KAAA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,CAAA,KAAA,KAAA;AACA,KAHA;AAIA,IAAA,QAAA,CAAA,gBAAA,CAAA,qBAAA,EAAA,MAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,KAAA,KAAA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,CAAA,KAAA,KAAA;AACA,KAHA;AAIA,IAAA,QAAA,CAAA,gBAAA,CAAA,wBAAA,EAAA,MAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,KAAA,KAAA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,CAAA,KAAA,KAAA;AACA,KAHA;AAIA,IAAA,QAAA,CAAA,gBAAA,CAAA,oBAAA,EAAA,MAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,KAAA,KAAA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,CAAA,KAAA,KAAA;AACA,KAHA;AAIA,SAAA,KAAA,CAAA,OAAA,EAAA,YAAA;AACA;;AA9DA,CAAA","sourcesContent":["<template>\r\n  <div v-if=\"showFullScreenBtn\" class=\"full-screen-btn-con\">\r\n    <Tooltip :content=\"value ? '退出全屏' : '全屏'\" placement=\"bottom\">\r\n      <Icon @click.native=\"handleChange\" :type=\"value ? 'md-contract' : 'md-expand'\" :size=\"23\"></Icon>\r\n    </Tooltip>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Fullscreen',\r\n  computed: {\r\n    showFullScreenBtn () {\r\n      return window.navigator.userAgent.indexOf('MSIE') < 0\r\n    }\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  methods: {\r\n    handleFullscreen () {\r\n      let main = document.body\r\n      if (this.value) {\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen()\r\n        } else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen()\r\n        } else if (document.webkitCancelFullScreen) {\r\n          document.webkitCancelFullScreen()\r\n        } else if (document.msExitFullscreen) {\r\n          document.msExitFullscreen()\r\n        }\r\n      } else {\r\n        if (main.requestFullscreen) {\r\n          main.requestFullscreen()\r\n        } else if (main.mozRequestFullScreen) {\r\n          main.mozRequestFullScreen()\r\n        } else if (main.webkitRequestFullScreen) {\r\n          main.webkitRequestFullScreen()\r\n        } else if (main.msRequestFullscreen) {\r\n          main.msRequestFullscreen()\r\n        }\r\n      }\r\n    },\r\n    handleChange () {\r\n      this.handleFullscreen()\r\n    }\r\n  },\r\n  mounted () {\r\n    let isFullscreen = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen\r\n    isFullscreen = !!isFullscreen\r\n    document.addEventListener('fullscreenchange', () => {\r\n      this.$emit('input', !this.value)\r\n      this.$emit('on-change', !this.value)\r\n    })\r\n    document.addEventListener('mozfullscreenchange', () => {\r\n      this.$emit('input', !this.value)\r\n      this.$emit('on-change', !this.value)\r\n    })\r\n    document.addEventListener('webkitfullscreenchange', () => {\r\n      this.$emit('input', !this.value)\r\n      this.$emit('on-change', !this.value)\r\n    })\r\n    document.addEventListener('msfullscreenchange', () => {\r\n      this.$emit('input', !this.value)\r\n      this.$emit('on-change', !this.value)\r\n    })\r\n    this.$emit('input', isFullscreen)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.full-screen-btn-con .ivu-tooltip-rel{\r\n  height: 64px;\r\n  line-height: 56px;\r\n  i{\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/view/main/components/fullscreen"}]}