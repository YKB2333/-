{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\home\\statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\home\\statistics.vue","mtime":1563189073919},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport { get, post } from \"../../libs/axios-cfg\";\n\nconst moment = require(\"moment\");\n\nconst DataSet = require(\"@antv/data-set\");\n\nconst G2 = require(\"@antv/g2\");\n\nexport default {\n  //   name: \"statistics\",\n  data() {\n    return {\n      chart: null\n    };\n  },\n\n  props: {\n    charData: {\n      type: Array,\n      default: function () {\n        return {\n          data: []\n        };\n      }\n    },\n    id: String\n  },\n\n  // 如果使用serverData传过来的静态数据 请使用mounted()方法 并注释掉watch\n  mounted() {\n    this.drawChart();\n  },\n\n  // 监听API接口传过来的数据 使用watch  2018-08-21更新\n  // watch: {\n  // charData: function (val, oldVal) {    // 监听charData，当发生变化时，触发这个回调函数绘制图表\n  // console.log('new: %s, old: %s', val, oldVal);\n  // this.drawChart(val);\n  // }\n  //   },\n  methods: {\n    drawChart: function () {\n      // 2019.03.30 更新 destory方法已被废弃\n      // this.chart && this.chart.destory()\n      this.chart = new G2.Chart({\n        container: this.id,\n        width: 600,\n        height: 300\n      });\n      this.chart.source(this.charData);\n      this.chart.scale(\"value\", {\n        min: 0\n      });\n      this.chart.scale(\"year\", {\n        range: [0, 1]\n      });\n      this.chart.tooltip({\n        crosshairs: {\n          type: \"line\"\n        }\n      });\n      this.chart.line().position(\"year*value\");\n      this.chart.point().position(\"year*value\").size(4).shape(\"circle\").style({\n        stroke: \"#fff\",\n        lineWidth: 1\n      });\n      this.chart.render();\n    }\n  }\n};",{"version":3,"sources":["statistics.vue"],"names":[],"mappings":";;;;;;AAOA,SAAA,GAAA,EAAA,IAAA,QAAA,sBAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,MAAA,EAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,eAAA;AACA;AACA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,YAAA;AACA,eAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA;AANA,KADA;AASA,IAAA,EAAA,EAAA;AATA,GAPA;;AAkBA;AACA,EAAA,OAAA,GAAA;AACA,SAAA,SAAA;AACA,GArBA;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,YAAA;AACA;AACA;AACA,WAAA,KAAA,GAAA,IAAA,EAAA,CAAA,KAAA,CAAA;AACA,QAAA,SAAA,EAAA,KAAA,EADA;AAEA,QAAA,KAAA,EAAA,GAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAAA,CAAA;AAKA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,QAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,QAAA,GAAA,EAAA;AADA,OAAA;AAGA,WAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AADA,OAAA;AAGA,WAAA,KAAA,CAAA,OAAA,CAAA;AACA,QAAA,UAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA;AADA,OAAA;AAKA,WAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,YAAA;AACA,WAAA,KAAA,CACA,KADA,GAEA,QAFA,CAEA,YAFA,EAGA,IAHA,CAGA,CAHA,EAIA,KAJA,CAIA,QAJA,EAKA,KALA,CAKA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA;AAFA,OALA;AASA,WAAA,KAAA,CAAA,MAAA;AACA;AAhCA;AA7BA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div :id=\"id\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { get, post } from \"../../libs/axios-cfg\";\r\nconst moment = require(\"moment\");\r\nconst DataSet = require(\"@antv/data-set\");\r\nconst G2 = require(\"@antv/g2\");\r\n\r\nexport default {\r\n//   name: \"statistics\",\r\n  data() {\r\n    return {\r\n      chart: null\r\n    };\r\n  },\r\n  props: {\r\n    charData: {\r\n      type: Array,\r\n      default: function() {\r\n        return {\r\n          data: []\r\n        };\r\n      }\r\n    },\r\n    id: String\r\n  },\r\n  // 如果使用serverData传过来的静态数据 请使用mounted()方法 并注释掉watch\r\n  mounted() {\r\n    this.drawChart();\r\n  },\r\n  // 监听API接口传过来的数据 使用watch  2018-08-21更新\r\n  // watch: {\r\n  // charData: function (val, oldVal) {    // 监听charData，当发生变化时，触发这个回调函数绘制图表\r\n  // console.log('new: %s, old: %s', val, oldVal);\r\n  // this.drawChart(val);\r\n  // }\r\n  //   },\r\n  methods: {\r\n    drawChart: function() {\r\n      // 2019.03.30 更新 destory方法已被废弃\r\n      // this.chart && this.chart.destory()\r\n      this.chart = new G2.Chart({\r\n        container: this.id,\r\n        width: 600,\r\n        height: 300\r\n      });\r\n      this.chart.source(this.charData);\r\n      this.chart.scale(\"value\", {\r\n        min: 0\r\n      });\r\n      this.chart.scale(\"year\", {\r\n        range: [0, 1]\r\n      });\r\n      this.chart.tooltip({\r\n        crosshairs: {\r\n          type: \"line\"\r\n        }\r\n      });\r\n      this.chart.line().position(\"year*value\");\r\n      this.chart\r\n        .point()\r\n        .position(\"year*value\")\r\n        .size(4)\r\n        .shape(\"circle\")\r\n        .style({\r\n          stroke: \"#fff\",\r\n          lineWidth: 1\r\n        });\r\n      this.chart.render();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/view/home"}]}