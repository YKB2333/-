{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\chook\\market.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\chook\\market.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { get, post } from \"../../libs/axios-cfg\";\nexport default {\n  name: \"market\",\n\n  data() {\n    return {\n      content: {\n        loading: false,\n        records: [],\n        columns: [{\n          title: '集市ID',\n          key: 'id',\n          width: 100\n        }, {\n          title: '集市名称',\n          key: 'name',\n          width: 120\n        }, {\n          title: '备注',\n          key: 'remark'\n        }, {\n          title: '创建时间',\n          key: 'createTime',\n          width: 150\n        }, {\n          title: '修改时间',\n          key: 'updateTime',\n          width: 150\n        }, {\n          title: '操作',\n          key: 'action',\n          width: 150,\n          align: 'center',\n          render: (h, params) => {\n            return h('Button', {\n              props: {\n                type: 'primary',\n                size: 'small'\n              },\n              style: {\n                marginRight: '5px'\n              },\n              on: {\n                click: () => {\n                  this.handleEdit(params.row);\n                }\n              }\n            }, '编辑');\n          }\n        }]\n      },\n      form: {\n        title: \"新增集市信息\",\n        isAdd: true,\n        show: false,\n        market: {},\n        ruleValidate: {\n          name: [{\n            required: true,\n            message: '集市名称不能为空',\n            trigger: 'blur'\n          }]\n        }\n      }\n    };\n  },\n\n  created() {\n    this.queryAllList();\n  },\n\n  methods: {\n    handleCreate() {\n      this.form.isAdd = true;\n      this.form.title = \"新增集市信息\";\n      this.form.show = true;\n      this.form.market = {};\n    },\n\n    handleRefresh() {\n      this.queryAllList();\n    },\n\n    handleSubmit(name) {\n      this.$refs[name].validate(valid => {\n        if (valid) {\n          if (this.form.isAdd) {\n            this.createMarket();\n          } else {\n            this.updateMarket();\n          }\n\n          this.form.show = false;\n          setTimeout(this.queryAllList, 1000);\n        } else {\n          this.$Message.error('验证不通过!');\n        }\n      });\n    },\n\n    handleReset(name) {\n      this.$refs[name].resetFields();\n    },\n\n    handleEdit(row) {\n      this.form.isAdd = false;\n      this.form.title = \"更新集市信息\";\n      this.form.market = row;\n      this.form.show = true;\n    },\n\n    async queryAllList() {\n      this.content.loading = true;\n\n      try {\n        let res = await get(\"api/pomelomgm/market/list/all\");\n\n        if (res.status == this.rescode.OK) {\n          this.content.records = res.data;\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n\n      this.content.loading = false;\n    },\n\n    async createMarket() {\n      try {\n        let res = await post(\"api/pomelomgm/market/add\", this.form.market);\n\n        if (res.status == this.rescode.OK) {\n          this.$Message.success(\"新增成功\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    },\n\n    async updateMarket() {\n      try {\n        let res = await post(\"api/pomelomgm/market/update/\" + this.form.market.id, this.form.market);\n\n        if (res.status == this.rescode.OK) {\n          this.$Message.success(\"更新成功\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    }\n\n  }\n};",{"version":3,"sources":["market.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <!-- 操作 -->\r\n            <div class=\"margin-bottom-10\">\r\n                <Row>\r\n                    <Col span=\"6\">\r\n                        <Button type=\"info\" icon=\"md-add\" @click=\"handleCreate\">新增</Button>\r\n                        <Button type=\"success\" icon=\"ios-refresh-circle-outline\" @click=\"handleRefresh\">查询</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <!-- 数据展示 -->\r\n            <Table border :loading=\"content.loading\" :columns=\"content.columns\" :data=\"content.records\"></Table>\r\n            <!-- 新增修改 -->\r\n            <Drawer class=\"add-update-drawer\" :title=\"form.title\"\r\n                    v-model=\"form.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <Form :model=\"form.market\" ref=\"formMarket\" :rules=\"form.ruleValidate\" style=\"margin-right: 30px\">\r\n                    <FormItem label=\"集市名称: \" label-position=\"left\" :label-width=\"80\" prop=\"name\">\r\n                        <Input v-model=\"form.market.name\" placeholder=\"请输入集市名称\" style=\"width: 300px\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"备注: \" label-position=\"left\" :label-width=\"80\" prop=\"remark\">\r\n                        <Input v-model=\"form.market.remark\" placeholder=\"请输入集市名称\" type=\"textarea\"\r\n                               :autosize=\"{minRows: 2,maxRows: 5}\"/>\r\n                    </FormItem>\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmit('formMarket')\">提交</Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formMarket')\">重置</Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Drawer>\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {get, post} from \"../../libs/axios-cfg\";\r\n\r\n    export default {\r\n        name: \"market\",\r\n        data() {\r\n            return {\r\n                content: {\r\n                    loading: false,\r\n                    records: [],\r\n                    columns: [\r\n                        {\r\n                            title: '集市ID',\r\n                            key: 'id',\r\n                            width: 100\r\n                        },\r\n                        {\r\n                            title: '集市名称',\r\n                            key: 'name',\r\n                            width: 120\r\n                        },\r\n                        {\r\n                            title: '备注',\r\n                            key: 'remark',\r\n                        },\r\n                        {\r\n                            title: '创建时间',\r\n                            key: 'createTime',\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: '修改时间',\r\n                            key: 'updateTime',\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: '操作',\r\n                            key: 'action',\r\n                            width: 150,\r\n                            align: 'center',\r\n                            render: (h, params) => {\r\n                                return h('Button', {\r\n                                    props: {\r\n                                        type: 'primary',\r\n                                        size: 'small'\r\n                                    },\r\n                                    style: {\r\n                                        marginRight: '5px'\r\n                                    },\r\n                                    on: {\r\n                                        click: () => {\r\n                                            this.handleEdit(params.row)\r\n                                        }\r\n                                    }\r\n                                }, '编辑')\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                form: {\r\n                    title: \"新增集市信息\",\r\n                    isAdd: true,\r\n                    show: false,\r\n                    market: {},\r\n                    ruleValidate: {\r\n                        name: [\r\n                            {required: true, message: '集市名称不能为空', trigger: 'blur'}\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.queryAllList();\r\n        },\r\n        methods: {\r\n            handleCreate() {\r\n                this.form.isAdd = true;\r\n                this.form.title = \"新增集市信息\";\r\n                this.form.show = true;\r\n                this.form.market = {};\r\n            },\r\n            handleRefresh() {\r\n                this.queryAllList();\r\n            },\r\n            handleSubmit(name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        if (this.form.isAdd) {\r\n                            this.createMarket()\r\n                        } else {\r\n                            this.updateMarket()\r\n                        }\r\n                        this.form.show = false;\r\n                        setTimeout(this.queryAllList, 1000);\r\n                    } else {\r\n                        this.$Message.error('验证不通过!')\r\n                    }\r\n                })\r\n            },\r\n            handleReset(name) {\r\n                this.$refs[name].resetFields()\r\n            },\r\n            handleEdit(row) {\r\n                this.form.isAdd = false;\r\n                this.form.title = \"更新集市信息\";\r\n                this.form.market = row;\r\n                this.form.show = true;\r\n            },\r\n            async queryAllList() {\r\n                this.content.loading = true;\r\n                try {\r\n                    let res = await get(\"api/pomelomgm/market/list/all\");\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.content.records = res.data;\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n                this.content.loading = false;\r\n            },\r\n            async createMarket() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/market/add\", this.form.market);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"新增成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async updateMarket() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/market/update/\" + this.form.market.id, this.form.market);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"更新成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/view/chook"}]}