{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\issue\\issue.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\issue\\issue.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { post } from \"../../libs/axios-cfg\";\nimport UploadImg from \"../main/components/upload-img/upload-img\";\nexport default {\n  name: \"banner\",\n  components: {\n    UploadImg\n  },\n\n  data() {\n    return {\n      option: {\n        status: [{\n          value: 'Y',\n          label: '已处理'\n        }, {\n          value: 'N',\n          label: '未处理'\n        }],\n        types: [{\n          value: 'ADOPT',\n          label: '领养'\n        }, {\n          value: 'TOPUP',\n          label: '充值'\n        }, {\n          value: 'ACCOUNT',\n          label: '账户'\n        }, {\n          value: 'COMMUNITY',\n          label: '社区'\n        }, {\n          value: 'OTHER',\n          label: '其他'\n        }]\n      },\n      search: {\n        page: 1,\n        pageSize: 5,\n        status: null,\n        type: null,\n        title: null,\n        startTime: null,\n        endTime: null,\n        dateRange: []\n      },\n      content: {\n        loading: false,\n        total: 0,\n        records: [],\n        columns: [{\n          title: '用户名',\n          key: 'username',\n          width: 100\n        }, {\n          title: '用户手机号',\n          key: 'userPhone',\n          width: 150\n        }, {\n          title: '标题',\n          key: 'title',\n          width: 200\n        }, {\n          title: '活动描述',\n          key: 'desc',\n          width: 300\n        }, {\n          title: '工单分类',\n          key: 'type',\n          width: 100,\n          render: (h, params) => {\n            return h('span', {}, params.row.type && params.row.type.name);\n          }\n        }, {\n          title: '工单图片',\n          key: 'image',\n          width: 180,\n          render: (h, params) => {\n            if (params.row.image) {\n              return h('img', {\n                attrs: {\n                  src: this.baseImgUrl + params.row.image\n                },\n                style: {\n                  width: '150px',\n                  height: '150px'\n                },\n                on: {\n                  click: e => {\n                    this.handleBigImg(e.srcElement.currentSrc);\n                  }\n                }\n              });\n            }\n          }\n        }, {\n          title: '状态',\n          key: 'status',\n          width: 100,\n          render: (h, params) => {\n            return h('span', {}, params.row.status && params.row.status.name);\n          }\n        }, {\n          title: '创建时间',\n          key: 'createTime',\n          width: 150\n        }, {\n          title: '活动描述',\n          key: 'action',\n          width: 150,\n          fixed: 'right',\n          align: 'center',\n          render: (h, params) => {\n            let disposeShow = \"标记为已处理\";\n\n            if (params.row.status && params.row.status.value == \"Y\") {\n              disposeShow = \"标记为未处理\";\n            }\n\n            return h('div', [h('Button', {\n              props: {\n                type: 'primary',\n                size: 'small'\n              },\n              style: {\n                marginRight: '5px'\n              },\n              on: {\n                click: () => {\n                  this.handleDispose(params.row);\n                }\n              }\n            }, disposeShow)]);\n          }\n        }]\n      },\n      form: {\n        title: \"新增系统消息\",\n        show: false,\n        isAdd: true,\n        record: {},\n        ruleValidate: {\n          status: [{\n            required: true,\n            message: '请选择横幅状态',\n            trigger: 'change'\n          }]\n        }\n      },\n      img: {\n        visible: false,\n        url: ''\n      }\n    };\n  },\n\n  created() {\n    this.queryRecords();\n  },\n\n  methods: {\n    handleBigImg(url) {\n      this.img.url = url;\n      this.img.visible = true;\n    },\n\n    handleSearch() {\n      this.queryRecords();\n    },\n\n    handleCreate() {\n      this.form.title = \"新增系统消息\";\n      this.form.isAdd = true;\n      this.form.record = {};\n      this.form.show = true;\n    },\n\n    handleEidt(row) {\n      this.form.title = \"更新系统消息\";\n      this.form.isAdd = false;\n      this.form.record = JSON.parse(JSON.stringify(row));\n\n      if (this.form.record.status) {\n        this.form.record.status = this.form.record.status.value;\n      }\n\n      this.form.show = true;\n    },\n\n    handleDispose(row) {\n      let uRow = JSON.parse(JSON.stringify(row));\n\n      if (uRow.status && uRow.status.value == \"Y\") {\n        uRow.status = \"N\";\n      } else {\n        uRow.status = \"Y\";\n      }\n\n      if (uRow.type) {\n        uRow.type = uRow.type.value;\n      }\n\n      this.updateStatus(uRow);\n      setTimeout(this.queryRecords, 1000);\n    },\n\n    handleRemove(row) {\n      this.$Modal.confirm({\n        title: '提醒',\n        content: '<p>确认删除横幅记录?</p>',\n        onOk: () => {\n          this.deleteRecord(row.id);\n          setTimeout(this.queryRecords, 1000);\n        },\n        onCancel: () => {\n          this.$Message.info('取消删除操作');\n        }\n      });\n    },\n\n    handleChangeBanners(banners) {\n      this.form.record.banners = banners;\n    },\n\n    handleChangePage(page) {\n      this.search.page = page;\n      this.queryRecords();\n    },\n\n    handleChangePageSize(pageSize) {\n      this.search.pageSize = pageSize;\n      this.queryRecords();\n    },\n\n    handleSubmit(name) {\n      var self = this;\n      this.$refs[name].validate(valid => {\n        if (valid) {\n          if (self.form.isAdd) {\n            this.createRecord();\n          } else {\n            this.updateRecord();\n          }\n\n          this.form.show = false;\n          setTimeout(this.queryRecords, 1000);\n        } else {\n          this.$Message.error('验证不通过!');\n        }\n      });\n    },\n\n    handleReset(name) {\n      this.$refs[name].resetFields();\n    },\n\n    async queryRecords() {\n      this.content.loading = true;\n\n      if (this.search.dateRange && this.search.dateRange.length == 2) {\n        if (this.search.dateRange[0] != '') {\n          this.search.startTime = this.search.dateRange[0];\n        }\n\n        if (this.search.dateRange[1] != '') {\n          this.search.endTime = this.search.dateRange[1];\n        }\n      }\n\n      try {\n        let res = await post('api/pomelomgm/issue/list', this.search);\n\n        if (res.status == this.rescode.OK) {\n          this.content.total = res.data.total;\n          this.content.records = res.data.records;\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n\n      this.content.loading = false;\n    },\n\n    async createRecord() {\n      try {\n        let res = await post(\"api/pomelomgm/issue/add\", this.form.record);\n\n        if (res.status == this.rescode.OK) {\n          this.$Message.success(\"新增成功\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    },\n\n    async updateRecord() {\n      try {\n        let res = await post(\"api/pomelomgm/issue/update/\" + this.form.record.id, this.form.record);\n\n        if (res.status == this.rescode.OK) {\n          this.$Message.success(\"更新成功\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    },\n\n    async updateStatus(row) {\n      try {\n        let res = await post(\"api/pomelomgm/issue/update/\" + row.id, row);\n\n        if (res.status == this.rescode.OK) {\n          this.$Message.success(\"操作成功\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    },\n\n    async deleteRecord(id) {\n      try {\n        let res = await post(\"api/pomelomgm/issue/remove/\" + id);\n\n        if (res.status == this.rescode.OK) {\n          this.$Message.success(\"删除成功\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    }\n\n  }\n};",{"version":3,"sources":["issue.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <!-- 条件查询 -->\r\n            <div class=\"margin-bottom-10\">\r\n                <Row class=\"margin-bottom-10\">\r\n                    <Col span=\"8\">\r\n                        <label>工单类型: </label>\r\n                        <Select v-model=\"search.type\" style=\"width:200px\" placeholder=\"请选择工单类型\" clearable>\r\n                            <Option v-for=\"status in option.types\" :value=\"status.value\" :key=\"status.value\">\r\n                                {{status.label }}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                    <Col span=\"8\">\r\n                        <label>标题: </label>\r\n                        <Input v-model=\"search.title\" placeholder=\"请输入工单标题\" style=\"width: 210px\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"8\">\r\n                        <label>是否处理: </label>\r\n                        <Select v-model=\"search.status\" style=\"width:200px\" placeholder=\"请选择处理状态\" clearable>\r\n                            <Option v-for=\"status in option.status\" :value=\"status.value\" :key=\"status.value\">\r\n                                {{status.label }}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                    <Col span=\"8\">\r\n                        <label>创建时间: </label>\r\n                        <DatePicker v-model=\"search.dateRange\" type=\"datetimerange\" placement=\"bottom-end\"\r\n                                    placeholder=\"选择创建时间范围\" style=\"width: 280px\" clearable/>\r\n                    </Col>\r\n                    <Col span=\"4\">\r\n                        <Button type=\"success\" icon=\"ios-search\" @click=\"handleSearch\">查询</Button>\r\n                        <!--<Button type=\"info\" icon=\"md-add\" @click=\"handleCreate\">新增</Button>-->\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <!-- 数据展示 -->\r\n            <div class=\"chook-cls-list\" style=\"overflow: hidden\">\r\n                <Table border :loading=\"content.loading\" :columns=\"content.columns\" :data=\"content.records\"></Table>\r\n                <div class=\"margin-top-8\"></div>\r\n                <Page :total=\"content.total\" @on-change=\"handleChangePage\" @on-page-size-change=\"handleChangePageSize\"\r\n                      show-sizer show-total show-elevator class=\"margin-right-10\"\r\n                      style=\"display: inline-flex;float: right;\"/>\r\n            </div>\r\n\r\n            <!-- 新增删除 -->\r\n            <Drawer class=\"add-update-drawer\"\r\n                    :title=\"form.title\"\r\n                    v-model=\"form.show\"\r\n                    width=\"720\"\r\n                    :mask-closable=\"false\">\r\n                <Form :model=\"form.record\" ref=\"formRecord\" :rules=\"form.ruleValidate\" style=\"margin-right: 30px\">\r\n                    <FormItem :label-width=\"80\">\r\n                        <Button type=\"primary\" style=\"margin-left: 30px\" @click=\"handleSubmit('formRecord')\">提交\r\n                        </Button>\r\n                        <Button style=\"margin-left: 8px\" @click=\"handleReset('formRecord')\">重置</Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </Drawer>\r\n\r\n            <!-- 大图查看 -->\r\n            <Modal title=\"查看大图\" v-model=\"img.visible\" class-name=\"fl-image-modal\">\r\n                <img :src=\"img.url\" v-if=\"img.visible\" style=\"width: 100%\">\r\n            </Modal>\r\n\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {post} from \"../../libs/axios-cfg\";\r\n    import UploadImg from \"../main/components/upload-img/upload-img\";\r\n\r\n    export default {\r\n        name: \"banner\",\r\n        components: {UploadImg},\r\n        data() {\r\n            return {\r\n                option: {\r\n                    status: [\r\n                        {value: 'Y', label: '已处理'},\r\n                        {value: 'N', label: '未处理'},\r\n                    ],\r\n                    types: [\r\n                        {value: 'ADOPT', label: '领养'},\r\n                        {value: 'TOPUP', label: '充值'},\r\n                        {value: 'ACCOUNT', label: '账户'},\r\n                        {value: 'COMMUNITY', label: '社区'},\r\n                        {value: 'OTHER', label: '其他'}\r\n                    ]\r\n                },\r\n                search: {\r\n                    page: 1,\r\n                    pageSize: 5,\r\n                    status: null,\r\n                    type: null,\r\n                    title: null,\r\n                    startTime: null,\r\n                    endTime: null,\r\n                    dateRange: []\r\n                },\r\n                content: {\r\n                    loading: false,\r\n                    total: 0,\r\n                    records: [],\r\n                    columns: [\r\n                        {\r\n                            title: '用户名',\r\n                            key: 'username',\r\n                            width: 100,\r\n                        },\r\n                        {\r\n                            title: '用户手机号',\r\n                            key: 'userPhone',\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: '标题',\r\n                            key: 'title',\r\n                            width: 200\r\n                        },\r\n                        {\r\n                            title: '活动描述',\r\n                            key: 'desc',\r\n                            width: 300\r\n                        },\r\n                        {\r\n                            title: '工单分类',\r\n                            key: 'type',\r\n                            width: 100,\r\n                            render: (h, params) => {\r\n                                return h('span', {}, params.row.type && params.row.type.name);\r\n                            }\r\n                        },\r\n                        {\r\n                            title: '工单图片',\r\n                            key: 'image',\r\n                            width: 180,\r\n                            render: (h, params) => {\r\n                                if (params.row.image) {\r\n                                    return h('img', {\r\n                                        attrs: {\r\n                                            src: this.baseImgUrl + params.row.image,\r\n                                        },\r\n                                        style: {\r\n                                            width: '150px',\r\n                                            height: '150px'\r\n                                        },\r\n                                        on: {\r\n                                            click: (e) => {\r\n                                                this.handleBigImg(e.srcElement.currentSrc)\r\n                                            }\r\n                                        }\r\n                                    })\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            title: '状态',\r\n                            key: 'status',\r\n                            width: 100,\r\n                            render: (h, params) => {\r\n                                return h('span', {}, params.row.status && params.row.status.name);\r\n                            }\r\n                        },\r\n                        {\r\n                            title: '创建时间',\r\n                            key: 'createTime',\r\n                            width: 150\r\n                        },\r\n                        {\r\n                            title: '活动描述',\r\n                            key: 'action',\r\n                            width: 150,\r\n                            fixed: 'right',\r\n                            align: 'center',\r\n                            render: (h, params) => {\r\n                                let disposeShow = \"标记为已处理\";\r\n                                if (params.row.status && params.row.status.value == \"Y\") {\r\n                                    disposeShow = \"标记为未处理\";\r\n                                }\r\n                                return h('div', [\r\n                                    h('Button', {\r\n                                        props: {\r\n                                            type: 'primary',\r\n                                            size: 'small'\r\n                                        },\r\n                                        style: {\r\n                                            marginRight: '5px'\r\n                                        },\r\n                                        on: {\r\n                                            click: () => {\r\n                                                this.handleDispose(params.row)\r\n                                            }\r\n                                        }\r\n                                    }, disposeShow)\r\n                                ])\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                form: {\r\n                    title: \"新增系统消息\",\r\n                    show: false,\r\n                    isAdd: true,\r\n                    record: {},\r\n                    ruleValidate: {\r\n                        status: [\r\n                            {required: true, message: '请选择横幅状态', trigger: 'change'}\r\n                        ]\r\n                    }\r\n                },\r\n                img: {\r\n                    visible: false,\r\n                    url: ''\r\n                },\r\n            }\r\n        },\r\n        created() {\r\n            this.queryRecords();\r\n        },\r\n        methods: {\r\n            handleBigImg(url) {\r\n                this.img.url = url;\r\n                this.img.visible = true;\r\n            },\r\n            handleSearch() {\r\n                this.queryRecords();\r\n            },\r\n            handleCreate() {\r\n                this.form.title = \"新增系统消息\";\r\n                this.form.isAdd = true;\r\n                this.form.record = {};\r\n                this.form.show = true;\r\n            },\r\n            handleEidt(row) {\r\n                this.form.title = \"更新系统消息\";\r\n                this.form.isAdd = false;\r\n                this.form.record = JSON.parse(JSON.stringify(row));\r\n                if (this.form.record.status) {\r\n                    this.form.record.status = this.form.record.status.value;\r\n                }\r\n                this.form.show = true;\r\n            },\r\n            handleDispose(row) {\r\n                let uRow = JSON.parse(JSON.stringify(row));\r\n                if (uRow.status && uRow.status.value == \"Y\") {\r\n                    uRow.status = \"N\";\r\n                } else {\r\n                    uRow.status = \"Y\";\r\n                }\r\n                if (uRow.type) {\r\n                    uRow.type = uRow.type.value;\r\n                }\r\n                this.updateStatus(uRow);\r\n                setTimeout(this.queryRecords, 1000);\r\n            },\r\n            handleRemove(row) {\r\n                this.$Modal.confirm({\r\n                    title: '提醒',\r\n                    content: '<p>确认删除横幅记录?</p>',\r\n                    onOk: () => {\r\n                        this.deleteRecord(row.id);\r\n                        setTimeout(this.queryRecords, 1000);\r\n                    },\r\n                    onCancel: () => {\r\n                        this.$Message.info('取消删除操作');\r\n                    }\r\n                });\r\n            },\r\n            handleChangeBanners(banners) {\r\n                this.form.record.banners = banners;\r\n            },\r\n            handleChangePage(page) {\r\n                this.search.page = page;\r\n                this.queryRecords();\r\n            },\r\n            handleChangePageSize(pageSize) {\r\n                this.search.pageSize = pageSize;\r\n                this.queryRecords();\r\n            },\r\n            handleSubmit(name) {\r\n                var self = this;\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        if (self.form.isAdd) {\r\n                            this.createRecord();\r\n                        } else {\r\n                            this.updateRecord();\r\n                        }\r\n                        this.form.show = false;\r\n                        setTimeout(this.queryRecords, 1000);\r\n                    } else {\r\n                        this.$Message.error('验证不通过!');\r\n                    }\r\n                })\r\n            },\r\n            handleReset(name) {\r\n                this.$refs[name].resetFields();\r\n            },\r\n            async queryRecords() {\r\n                this.content.loading = true;\r\n                if (this.search.dateRange && this.search.dateRange.length == 2) {\r\n                    if (this.search.dateRange[0] != '') {\r\n                        this.search.startTime = this.search.dateRange[0];\r\n                    }\r\n                    if (this.search.dateRange[1] != '') {\r\n                        this.search.endTime = this.search.dateRange[1];\r\n                    }\r\n                }\r\n                try {\r\n                    let res = await post('api/pomelomgm/issue/list', this.search);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.content.total = res.data.total;\r\n                        this.content.records = res.data.records;\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n                this.content.loading = false;\r\n            },\r\n            async createRecord() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/issue/add\", this.form.record);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"新增成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async updateRecord() {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/issue/update/\" + this.form.record.id, this.form.record);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"更新成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async updateStatus(row) {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/issue/update/\" + row.id, row);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"操作成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async deleteRecord(id) {\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/issue/remove/\" + id);\r\n                    if (res.status == this.rescode.OK) {\r\n                        this.$Message.success(\"删除成功\");\r\n                    } else {\r\n                        this.$Message.error(res.msg);\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/view/issue"}]}