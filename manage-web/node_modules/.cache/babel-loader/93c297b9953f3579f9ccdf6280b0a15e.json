{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\libs\\axios-cfg.js","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\libs\\axios-cfg.js","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport iView from 'iview';\nimport { ResError } from './error/ResError';\nimport sf from 'string-format';\nimport store from '@/store';\nimport { router } from '@/router/index';\nimport config from '../config/index';\nconst baseRequestUrl = process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro;\nconst axiosInstance = axios.create({\n  baseURL: baseRequestUrl,\n  timeout: 3000 // withCredentials: true\n\n});\naxiosInstance.interceptors.request.use(function (config) {\n  iView.LoadingBar.start();\n\n  if (localStorage.getItem('csrf-token')) {\n    config.headers.Authorization = localStorage.getItem('csrf-token');\n  }\n\n  return config;\n}, function (error) {\n  iView.LoadingBar.finish();\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(res => {\n  iView.LoadingBar.finish(); // -6表明身份异常或未登录\n\n  if (res.data.code == -6) {\n    store.commit('setToken', '');\n    store.commit('setAccess', []);\n    localStorage.clear();\n    router.push({\n      name: 'login'\n    });\n  } // 状态码小于0属于异常情况\n\n\n  if (res.data.status < 0) {\n    throw new ResError(res.data.msg);\n  }\n\n  return res.data;\n}, error => {\n  iView.LoadingBar.finish();\n  console.error(error);\n  throw new ResError('请求服务器失败，请检查服务是否正常！');\n  return error;\n});\nexport const baseUrl = baseRequestUrl;\nexport const get = (url, params, pathVariable = null) => {\n  if (params == null) {\n    params = {\n      axios_timestamp_current: new Date().getTime()\n    };\n  } else {\n    params.axios_timestamp_current = new Date().getTime();\n  }\n\n  return axiosInstance.get(sf(url, pathVariable), {\n    params: params\n  });\n};\nexport const post = (url, params, pathVariable = null) => axiosInstance.post(sf(url, pathVariable), params);\nexport const put = (url, params, pathVariable = null) => axiosInstance.put(sf(url, pathVariable), params);\nexport const patch = (url, params, pathVariable = null) => axiosInstance.patch(sf(url, pathVariable), params);\nexport const del = (url, params, pathVariable = null) => axiosInstance.delete(sf(url, pathVariable), {\n  params: params\n});",{"version":3,"sources":["C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\libs\\axios-cfg.js"],"names":["axios","iView","ResError","sf","store","router","config","baseRequestUrl","process","env","NODE_ENV","baseUrl","dev","pro","axiosInstance","create","baseURL","timeout","interceptors","request","use","LoadingBar","start","localStorage","getItem","headers","Authorization","error","finish","Promise","reject","response","res","data","code","commit","clear","push","name","status","msg","console","get","url","params","pathVariable","axios_timestamp_current","Date","getTime","post","put","patch","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCJ,MAAM,CAACK,OAAP,CAAeC,GAAxD,GAA8DN,MAAM,CAACK,OAAP,CAAeE,GAApG;AAEA,MAAMC,aAAa,GAAGd,KAAK,CAACe,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAET,cADwB;AAEjCU,EAAAA,OAAO,EAAE,IAFwB,CAGjC;;AAHiC,CAAb,CAAtB;AAKAH,aAAa,CAACI,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAUd,MAAV,EAAkB;AACvDL,EAAAA,KAAK,CAACoB,UAAN,CAAiBC,KAAjB;;AACA,MAAIC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAJ,EAAwC;AACtClB,IAAAA,MAAM,CAACmB,OAAP,CAAeC,aAAf,GAA+BH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/B;AACD;;AACD,SAAOlB,MAAP;AACD,CAND,EAMG,UAAUqB,KAAV,EAAiB;AAClB1B,EAAAA,KAAK,CAACoB,UAAN,CAAiBO,MAAjB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CATD;AAUAb,aAAa,CAACI,YAAd,CAA2Ba,QAA3B,CAAoCX,GAApC,CAAwCY,GAAG,IAAI;AAC7C/B,EAAAA,KAAK,CAACoB,UAAN,CAAiBO,MAAjB,GAD6C,CAE7C;;AACA,MAAII,GAAG,CAACC,IAAJ,CAASC,IAAT,IAAiB,CAAC,CAAtB,EAAyB;AACvB9B,IAAAA,KAAK,CAAC+B,MAAN,CAAa,UAAb,EAAyB,EAAzB;AACA/B,IAAAA,KAAK,CAAC+B,MAAN,CAAa,WAAb,EAA0B,EAA1B;AACAZ,IAAAA,YAAY,CAACa,KAAb;AACA/B,IAAAA,MAAM,CAACgC,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAE;AADI,KAAZ;AAGD,GAV4C,CAW7C;;;AACA,MAAIN,GAAG,CAACC,IAAJ,CAASM,MAAT,GAAkB,CAAtB,EAAyB;AACvB,UAAM,IAAIrC,QAAJ,CAAa8B,GAAG,CAACC,IAAJ,CAASO,GAAtB,CAAN;AACD;;AACD,SAAOR,GAAG,CAACC,IAAX;AACD,CAhBD,EAgBGN,KAAK,IAAI;AACV1B,EAAAA,KAAK,CAACoB,UAAN,CAAiBO,MAAjB;AACAa,EAAAA,OAAO,CAACd,KAAR,CAAcA,KAAd;AACA,QAAM,IAAIzB,QAAJ,CAAa,oBAAb,CAAN;AACA,SAAOyB,KAAP;AACD,CArBD;AAuBA,OAAO,MAAMhB,OAAO,GAAGJ,cAAhB;AAEP,OAAO,MAAMmC,GAAG,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,YAAY,GAAG,IAA7B,KAAsC;AACvD,MAAID,MAAM,IAAI,IAAd,EAAoB;AAClBA,IAAAA,MAAM,GAAG;AAAEE,MAAAA,uBAAuB,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAA3B,KAAT;AACD,GAFD,MAEO;AACLJ,IAAAA,MAAM,CAACE,uBAAP,GAAiC,IAAIC,IAAJ,GAAWC,OAAX,EAAjC;AACD;;AACD,SAAOlC,aAAa,CAAC4B,GAAd,CAAkBvC,EAAE,CAACwC,GAAD,EAAME,YAAN,CAApB,EAAyC;AAAED,IAAAA,MAAM,EAAEA;AAAV,GAAzC,CAAP;AACD,CAPM;AASP,OAAO,MAAMK,IAAI,GAAG,CAACN,GAAD,EAAMC,MAAN,EAAcC,YAAY,GAAG,IAA7B,KAAsC/B,aAAa,CAACmC,IAAd,CAAmB9C,EAAE,CAACwC,GAAD,EAAME,YAAN,CAArB,EAA0CD,MAA1C,CAAnD;AAEP,OAAO,MAAMM,GAAG,GAAG,CAACP,GAAD,EAAMC,MAAN,EAAcC,YAAY,GAAG,IAA7B,KAAsC/B,aAAa,CAACoC,GAAd,CAAkB/C,EAAE,CAACwC,GAAD,EAAME,YAAN,CAApB,EAAyCD,MAAzC,CAAlD;AAEP,OAAO,MAAMO,KAAK,GAAG,CAACR,GAAD,EAAMC,MAAN,EAAcC,YAAY,GAAG,IAA7B,KAAsC/B,aAAa,CAACqC,KAAd,CAAoBhD,EAAE,CAACwC,GAAD,EAAME,YAAN,CAAtB,EAA2CD,MAA3C,CAApD;AAEP,OAAO,MAAMQ,GAAG,GAAG,CAACT,GAAD,EAAMC,MAAN,EAAcC,YAAY,GAAG,IAA7B,KAAsC/B,aAAa,CAACuC,MAAd,CAAqBlD,EAAE,CAACwC,GAAD,EAAME,YAAN,CAAvB,EAA4C;AAAED,EAAAA,MAAM,EAAEA;AAAV,CAA5C,CAAlD","sourcesContent":["import axios from 'axios'\r\nimport iView from 'iview'\r\nimport { ResError } from './error/ResError'\r\nimport sf from 'string-format'\r\nimport store from '@/store'\r\nimport { router } from '@/router/index'\r\nimport config from '../config/index'\r\n\r\nconst baseRequestUrl = process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseRequestUrl,\r\n  timeout: 3000\r\n  // withCredentials: true\r\n})\r\naxiosInstance.interceptors.request.use(function (config) {\r\n  iView.LoadingBar.start()\r\n  if (localStorage.getItem('csrf-token')) {\r\n    config.headers.Authorization = localStorage.getItem('csrf-token')\r\n  }\r\n  return config\r\n}, function (error) {\r\n  iView.LoadingBar.finish()\r\n  return Promise.reject(error)\r\n})\r\naxiosInstance.interceptors.response.use(res => {\r\n  iView.LoadingBar.finish()\r\n  // -6表明身份异常或未登录\r\n  if (res.data.code == -6) {\r\n    store.commit('setToken', '')\r\n    store.commit('setAccess', [])\r\n    localStorage.clear()\r\n    router.push({\r\n      name: 'login'\r\n    })\r\n  }\r\n  // 状态码小于0属于异常情况\r\n  if (res.data.status < 0) {\r\n    throw new ResError(res.data.msg)\r\n  }\r\n  return res.data\r\n}, error => {\r\n  iView.LoadingBar.finish()\r\n  console.error(error)\r\n  throw new ResError('请求服务器失败，请检查服务是否正常！')\r\n  return error\r\n})\r\n\r\nexport const baseUrl = baseRequestUrl\r\n\r\nexport const get = (url, params, pathVariable = null) => {\r\n  if (params == null) {\r\n    params = { axios_timestamp_current: new Date().getTime() }\r\n  } else {\r\n    params.axios_timestamp_current = new Date().getTime()\r\n  }\r\n  return axiosInstance.get(sf(url, pathVariable), { params: params })\r\n}\r\n\r\nexport const post = (url, params, pathVariable = null) => axiosInstance.post(sf(url, pathVariable), params)\r\n\r\nexport const put = (url, params, pathVariable = null) => axiosInstance.put(sf(url, pathVariable), params)\r\n\r\nexport const patch = (url, params, pathVariable = null) => axiosInstance.patch(sf(url, pathVariable), params)\r\n\r\nexport const del = (url, params, pathVariable = null) => axiosInstance.delete(sf(url, pathVariable), { params: params })\r\n"]}]}