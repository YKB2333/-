{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\subscribe\\statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\subscribe\\statistics.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { get, post } from \"../../libs/axios-cfg\";\n\nconst moment = require(\"moment\");\n\nconst DataSet = require('@antv/data-set');\n\nexport default {\n  name: \"statistics\",\n\n  data() {\n    return {\n      option: {\n        markets: []\n      },\n      search: {\n        dateRange: [moment().subtract(15, 'days').format('YYYY-MM-DD'), moment().add(2, 'days').format(\"YYYY-MM-DD\")],\n        startDate: null,\n        endDate: null,\n        marketId: null\n      },\n      chart: {\n        height: 400,\n        fields: ['Tokyo', 'London'],\n        datas: [{\n          month: 'Jan',\n          Tokyo: 7.0,\n          London: 3.9\n        }, {\n          month: 'Feb',\n          Tokyo: 6.9,\n          London: 4.2\n        }, {\n          month: 'Mar',\n          Tokyo: 9.5,\n          London: 5.7\n        }, {\n          month: 'Apr',\n          Tokyo: 14.5,\n          London: 8.5\n        }, {\n          month: 'May',\n          Tokyo: 18.4,\n          London: 11.9\n        }, {\n          month: 'Jun',\n          Tokyo: 21.5,\n          London: 15.2\n        }, {\n          month: 'Jul',\n          Tokyo: 25.2,\n          London: 17.0\n        }, {\n          month: 'Aug',\n          Tokyo: 26.5,\n          London: 16.6\n        }, {\n          month: 'Sep',\n          Tokyo: 23.3,\n          London: 14.2\n        }, {\n          month: 'Oct',\n          Tokyo: 18.3,\n          London: 10.3\n        }, {\n          month: 'Nov',\n          Tokyo: 13.9,\n          London: 6.6\n        }, {\n          month: 'Dec',\n          Tokyo: 9.6,\n          London: 4.8\n        }],\n        scale: [{\n          dataKey: 'month',\n          min: 0,\n          max: 1\n        }]\n      }\n    };\n  },\n\n  created() {\n    this.queryAllMarket();\n  },\n\n  computed: {\n    chartData() {\n      let dv = new DataSet.View().source(this.chart.datas);\n      dv.transform({\n        type: 'fold',\n        fields: this.chart.fields,\n        key: 'chookCls',\n        value: 'count'\n      });\n      return dv.rows;\n    }\n\n  },\n  methods: {\n    handleSearch() {\n      if (!this.search.dateRange || this.search.dateRange.length != 2) {\n        this.$Message.error(\"请选择时间范围\");\n        return;\n      }\n\n      if (!this.search.marketId) {\n        this.$Message.error(\"请选择集市\");\n        return;\n      }\n\n      this.querySubStatData();\n    },\n\n    async queryAllMarket() {\n      try {\n        let res = await get(\"api/pomelomgm/market/list/all\");\n\n        if (res.status == 1) {\n          this.option.markets = res.data;\n          this.search.marketId = res.data[0].id;\n          this.querySubStatData();\n        } else {\n          this.option.markets = [];\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    },\n\n    async querySubStatData() {\n      this.search.startDate = this.search.dateRange[0];\n      this.search.endDate = this.search.dateRange[1];\n\n      try {\n        let res = await post(\"api/pomelomgm/subscribe/stat\", this.search);\n\n        if (res.status == 1) {\n          this.chart.fields = res.data.fields;\n          this.chart.datas = res.data.datas;\n        } else {\n          this.chart.fields = [];\n          this.chart.datas = [];\n        }\n      } catch (e) {\n        this.$throw(e);\n      }\n    }\n\n  }\n};",{"version":3,"sources":["statistics.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <Card>\r\n            <!-- 条件查询 -->\r\n            <div class=\"margin-bottom-10\">\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <label>时间范围: </label>\r\n                        <DatePicker v-model=\"search.dateRange\" format=\"yyyy-MM-dd\" type=\"daterange\"\r\n                                    placement=\"bottom-end\"\r\n                                    placeholder=\"选择时间范围\" style=\"width: 400px\"></DatePicker>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <label>集市: </label>\r\n                        <Select v-model=\"search.marketId\" style=\"width:200px\" placeholder=\"请选择集市\" clearable>\r\n                            <Option v-for=\"maket in option.markets\" :value=\"maket.id\" :key=\"maket.id\">{{ maket.name }}\r\n                            </Option>\r\n                        </Select>\r\n                    </Col>\r\n                    <Col span=\"6\">\r\n                        <Button type=\"success\" icon=\"ios-search\" @click=\"handleSearch\">查询</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div class=\"margin-right-10 margin-left-10\" style=\"width: 100%;overflow: hidden\">\r\n                <v-chart :forceFit=\"true\" :height=\"chart.height\" :data=\"chartData\" :scale=\"chart.scale\" style=\"width: 80%;display: inline-flex;float: left\">\r\n                    <v-tooltip/>\r\n                    <v-axis/>\r\n                    <v-legend/>\r\n                    <v-smooth-line position=\"date*count\" color=\"chookCls\" shape=\"smooth\"/>\r\n                    <v-point position=\"date*count\" color=\"chookCls\" shape=\"chookCls\"/>\r\n                </v-chart>\r\n\r\n            </div>\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {get, post} from \"../../libs/axios-cfg\";\r\n\r\n    const moment = require(\"moment\");\r\n    const DataSet = require('@antv/data-set');\r\n\r\n    export default {\r\n        name: \"statistics\",\r\n        data() {\r\n            return {\r\n                option: {\r\n                    markets: []\r\n                },\r\n                search: {\r\n                    dateRange: [moment().subtract(15, 'days').format('YYYY-MM-DD'), moment().add(2, 'days').format(\"YYYY-MM-DD\")],\r\n                    startDate: null,\r\n                    endDate: null,\r\n                    marketId: null,\r\n                },\r\n                chart: {\r\n                    height: 400,\r\n                    fields: ['Tokyo', 'London'],\r\n                    datas: [\r\n                        {month: 'Jan', Tokyo: 7.0, London: 3.9},\r\n                        {month: 'Feb', Tokyo: 6.9, London: 4.2},\r\n                        {month: 'Mar', Tokyo: 9.5, London: 5.7},\r\n                        {month: 'Apr', Tokyo: 14.5, London: 8.5},\r\n                        {month: 'May', Tokyo: 18.4, London: 11.9},\r\n                        {month: 'Jun', Tokyo: 21.5, London: 15.2},\r\n                        {month: 'Jul', Tokyo: 25.2, London: 17.0},\r\n                        {month: 'Aug', Tokyo: 26.5, London: 16.6},\r\n                        {month: 'Sep', Tokyo: 23.3, London: 14.2},\r\n                        {month: 'Oct', Tokyo: 18.3, London: 10.3},\r\n                        {month: 'Nov', Tokyo: 13.9, London: 6.6},\r\n                        {month: 'Dec', Tokyo: 9.6, London: 4.8},\r\n                    ],\r\n                    scale: [{\r\n                        dataKey: 'month',\r\n                        min: 0,\r\n                        max: 1,\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.queryAllMarket();\r\n        },\r\n        computed: {\r\n            chartData() {\r\n                let dv = new DataSet.View().source(this.chart.datas);\r\n                dv.transform({\r\n                    type: 'fold',\r\n                    fields: this.chart.fields,\r\n                    key: 'chookCls',\r\n                    value: 'count',\r\n                });\r\n                return dv.rows;\r\n            }\r\n        },\r\n        methods: {\r\n            handleSearch() {\r\n                if (!this.search.dateRange || this.search.dateRange.length != 2) {\r\n                    this.$Message.error(\"请选择时间范围\");\r\n                    return;\r\n                }\r\n                if (!this.search.marketId) {\r\n                    this.$Message.error(\"请选择集市\");\r\n                    return;\r\n                }\r\n                this.querySubStatData();\r\n            },\r\n            async queryAllMarket() {\r\n                try {\r\n                    let res = await get(\"api/pomelomgm/market/list/all\");\r\n                    if (res.status == 1) {\r\n                        this.option.markets = res.data;\r\n                        this.search.marketId = res.data[0].id;\r\n                        this.querySubStatData();\r\n                    } else {\r\n                        this.option.markets = [];\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            },\r\n            async querySubStatData() {\r\n                this.search.startDate = this.search.dateRange[0];\r\n                this.search.endDate = this.search.dateRange[1];\r\n                try {\r\n                    let res = await post(\"api/pomelomgm/subscribe/stat\", this.search);\r\n                    if (res.status == 1) {\r\n                        this.chart.fields = res.data.fields;\r\n                        this.chart.datas = res.data.datas;\r\n                    } else {\r\n                        this.chart.fields = [];\r\n                        this.chart.datas = [];\r\n                    }\r\n                } catch (e) {\r\n                    this.$throw(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/view/subscribe"}]}