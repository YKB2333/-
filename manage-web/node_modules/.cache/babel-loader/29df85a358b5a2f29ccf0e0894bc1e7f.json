{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\tags-nav\\tags-nav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\main\\components\\tags-nav\\tags-nav.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { showTitle, routeEqual } from '@/libs/util';\nexport default {\n  name: 'TagsNav',\n  props: {\n    value: Object,\n    list: {\n      type: Array,\n\n      default() {\n        return [];\n      }\n\n    }\n  },\n\n  data() {\n    return {\n      tagBodyLeft: 0,\n      rightOffset: 40,\n      outerPadding: 4,\n      contextMenuLeft: 0,\n      contextMenuTop: 0,\n      visible: false,\n      menuList: {\n        others: '关闭其他',\n        all: '关闭所有'\n      }\n    };\n  },\n\n  computed: {\n    currentRouteObj() {\n      const {\n        name,\n        params,\n        query\n      } = this.value;\n      return {\n        name,\n        params,\n        query\n      };\n    }\n\n  },\n  methods: {\n    handlescroll(e) {\n      var type = e.type;\n      let delta = 0;\n\n      if (type === 'DOMMouseScroll' || type === 'mousewheel') {\n        delta = e.wheelDelta ? e.wheelDelta : -(e.detail || 0) * 40;\n      }\n\n      this.handleScroll(delta);\n    },\n\n    handleScroll(offset) {\n      const outerWidth = this.$refs.scrollOuter.offsetWidth;\n      const bodyWidth = this.$refs.scrollBody.offsetWidth;\n\n      if (offset > 0) {\n        this.tagBodyLeft = Math.min(0, this.tagBodyLeft + offset);\n      } else {\n        if (outerWidth < bodyWidth) {\n          if (this.tagBodyLeft < -(bodyWidth - outerWidth)) {\n            this.tagBodyLeft = this.tagBodyLeft;\n          } else {\n            this.tagBodyLeft = Math.max(this.tagBodyLeft + offset, outerWidth - bodyWidth);\n          }\n        } else {\n          this.tagBodyLeft = 0;\n        }\n      }\n    },\n\n    handleTagsOption(type) {\n      if (type === 'all') {\n        // 关闭所有，除了home\n        let res = this.list.filter(item => item.name === 'home');\n        this.$emit('on-close', res, 'all');\n      } else if (type === 'others') {\n        // 关闭除当前页和home页的其他页\n        let res = this.list.filter(item => routeEqual(this.currentRouteObj, item) || item.name === 'home');\n        this.$emit('on-close', res, 'others', this.currentRouteObj);\n        setTimeout(() => {\n          this.getTagElementByName(this.currentRouteObj.name);\n        }, 100);\n      }\n    },\n\n    handleClose(current) {\n      let res = this.list.filter(item => !routeEqual(current, item));\n      this.$emit('on-close', res, undefined, current);\n    },\n\n    handleClick(item) {\n      this.$emit('input', item);\n    },\n\n    showTitleInside(item) {\n      return showTitle(item, this);\n    },\n\n    isCurrentTag(item) {\n      return routeEqual(this.currentRouteObj, item);\n    },\n\n    moveToView(tag) {\n      const outerWidth = this.$refs.scrollOuter.offsetWidth;\n      const bodyWidth = this.$refs.scrollBody.offsetWidth;\n\n      if (bodyWidth < outerWidth) {\n        this.tagBodyLeft = 0;\n      } else if (tag.offsetLeft < -this.tagBodyLeft) {\n        // 标签在可视区域左侧\n        this.tagBodyLeft = -tag.offsetLeft + this.outerPadding;\n      } else if (tag.offsetLeft > -this.tagBodyLeft && tag.offsetLeft + tag.offsetWidth < -this.tagBodyLeft + outerWidth) {\n        // 标签在可视区域\n        this.tagBodyLeft = Math.min(0, outerWidth - tag.offsetWidth - tag.offsetLeft - this.outerPadding);\n      } else {\n        // 标签在可视区域右侧\n        this.tagBodyLeft = -(tag.offsetLeft - (outerWidth - this.outerPadding - tag.offsetWidth));\n      }\n    },\n\n    getTagElementByName(name) {\n      this.$nextTick(() => {\n        this.refsTag = this.$refs.tagsPageOpened;\n        this.refsTag.forEach((item, index) => {\n          if (name === item.name) {\n            let tag = this.refsTag[index].$el;\n            this.moveToView(tag);\n          }\n        });\n      });\n    },\n\n    contextMenu(item, e) {\n      if (item.name === 'home') {\n        return;\n      }\n\n      this.visible = true;\n      const offsetLeft = this.$el.getBoundingClientRect().left;\n      this.contextMenuLeft = e.clientX - offsetLeft + 10;\n      this.contextMenuTop = e.clientY - 64;\n    },\n\n    closeMenu() {\n      this.visible = false;\n    }\n\n  },\n  watch: {\n    '$route'(to) {\n      this.getTagElementByName(to.name);\n    },\n\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n\n  },\n\n  mounted() {\n    setTimeout(() => {\n      this.getTagElementByName(this.$route.name);\n    }, 200);\n  }\n\n};",{"version":3,"sources":["tags-nav.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"tags-nav\">\r\n    <ul v-show=\"visible\" :style=\"{left: contextMenuLeft + 'px', top: contextMenuTop + 'px'}\" class=\"contextmenu\">\r\n      <li v-for=\"(item, key) of menuList\" @click=\"handleTagsOption(key)\" :key=\"key\">{{item}}</li>\r\n    </ul>\r\n    <div class=\"btn-con left-btn\">\r\n      <Button type=\"text\" @click=\"handleScroll(240)\">\r\n        <Icon :size=\"18\" type=\"ios-arrow-back\" />\r\n      </Button>\r\n    </div>\r\n    <div class=\"btn-con right-btn\">\r\n      <Button type=\"text\" @click=\"handleScroll(-240)\">\r\n        <Icon :size=\"18\" type=\"ios-arrow-forward\" />\r\n      </Button>\r\n    </div>\r\n    <div class=\"scroll-outer\" ref=\"scrollOuter\" @DOMMouseScroll=\"handlescroll\" @mousewheel=\"handlescroll\">\r\n      <div ref=\"scrollBody\" class=\"scroll-body\" :style=\"{left: tagBodyLeft + 'px'}\">\r\n        <transition-group name=\"taglist-moving-animation\">\r\n          <Tag\r\n            type=\"dot\"\r\n            v-for=\"(item, index) in list\"\r\n            ref=\"tagsPageOpened\"\r\n            :key=\"`tag-nav-${index}`\"\r\n            :name=\"item.name\"\r\n            @on-close=\"handleClose(item)\"\r\n            @click.native=\"handleClick(item)\"\r\n            :closable=\"item.name !== 'home'\"\r\n            :color=\"isCurrentTag(item) ? 'primary' : 'default'\"\r\n            @contextmenu.prevent.native=\"contextMenu(item, $event)\"\r\n          >{{ showTitleInside(item) }}</Tag>\r\n        </transition-group>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { showTitle, routeEqual } from '@/libs/util'\r\nexport default {\r\n  name: 'TagsNav',\r\n  props: {\r\n    value: Object,\r\n    list: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      tagBodyLeft: 0,\r\n      rightOffset: 40,\r\n      outerPadding: 4,\r\n      contextMenuLeft: 0,\r\n      contextMenuTop: 0,\r\n      visible: false,\r\n      menuList: {\r\n        others: '关闭其他',\r\n        all: '关闭所有'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    currentRouteObj () {\r\n      const { name, params, query } = this.value\r\n      return { name, params, query }\r\n    }\r\n  },\r\n  methods: {\r\n    handlescroll (e) {\r\n      var type = e.type\r\n      let delta = 0\r\n      if (type === 'DOMMouseScroll' || type === 'mousewheel') {\r\n        delta = (e.wheelDelta) ? e.wheelDelta : -(e.detail || 0) * 40\r\n      }\r\n      this.handleScroll(delta)\r\n    },\r\n    handleScroll (offset) {\r\n      const outerWidth = this.$refs.scrollOuter.offsetWidth\r\n      const bodyWidth = this.$refs.scrollBody.offsetWidth\r\n      if (offset > 0) {\r\n        this.tagBodyLeft = Math.min(0, this.tagBodyLeft + offset)\r\n      } else {\r\n        if (outerWidth < bodyWidth) {\r\n          if (this.tagBodyLeft < -(bodyWidth - outerWidth)) {\r\n            this.tagBodyLeft = this.tagBodyLeft\r\n          } else {\r\n            this.tagBodyLeft = Math.max(this.tagBodyLeft + offset, outerWidth - bodyWidth)\r\n          }\r\n        } else {\r\n          this.tagBodyLeft = 0\r\n        }\r\n      }\r\n    },\r\n    handleTagsOption (type) {\r\n      if (type === 'all') {\r\n        // 关闭所有，除了home\r\n        let res = this.list.filter(item => item.name === 'home')\r\n        this.$emit('on-close', res, 'all')\r\n      } else if (type === 'others') {\r\n        // 关闭除当前页和home页的其他页\r\n        let res = this.list.filter(item => routeEqual(this.currentRouteObj, item) || item.name === 'home')\r\n        this.$emit('on-close', res, 'others', this.currentRouteObj)\r\n        setTimeout(() => {\r\n          this.getTagElementByName(this.currentRouteObj.name)\r\n        }, 100)\r\n      }\r\n    },\r\n    handleClose (current) {\r\n      let res = this.list.filter(item => !routeEqual(current, item))\r\n      this.$emit('on-close', res, undefined, current)\r\n    },\r\n    handleClick (item) {\r\n      this.$emit('input', item)\r\n    },\r\n    showTitleInside (item) {\r\n      return showTitle(item, this)\r\n    },\r\n    isCurrentTag (item) {\r\n      return routeEqual(this.currentRouteObj, item)\r\n    },\r\n    moveToView (tag) {\r\n      const outerWidth = this.$refs.scrollOuter.offsetWidth\r\n      const bodyWidth = this.$refs.scrollBody.offsetWidth\r\n      if (bodyWidth < outerWidth) {\r\n        this.tagBodyLeft = 0\r\n      } else if (tag.offsetLeft < -this.tagBodyLeft) {\r\n        // 标签在可视区域左侧\r\n        this.tagBodyLeft = -tag.offsetLeft + this.outerPadding\r\n      } else if (tag.offsetLeft > -this.tagBodyLeft && tag.offsetLeft + tag.offsetWidth < -this.tagBodyLeft + outerWidth) {\r\n        // 标签在可视区域\r\n        this.tagBodyLeft = Math.min(0, outerWidth - tag.offsetWidth - tag.offsetLeft - this.outerPadding)\r\n      } else {\r\n        // 标签在可视区域右侧\r\n        this.tagBodyLeft = -(tag.offsetLeft - (outerWidth - this.outerPadding - tag.offsetWidth))\r\n      }\r\n    },\r\n    getTagElementByName (name) {\r\n      this.$nextTick(() => {\r\n        this.refsTag = this.$refs.tagsPageOpened\r\n        this.refsTag.forEach((item, index) => {\r\n          if (name === item.name) {\r\n            let tag = this.refsTag[index].$el\r\n            this.moveToView(tag)\r\n          }\r\n        })\r\n      })\r\n    },\r\n    contextMenu (item, e) {\r\n      if (item.name === 'home') {\r\n        return\r\n      }\r\n      this.visible = true\r\n      const offsetLeft = this.$el.getBoundingClientRect().left\r\n      this.contextMenuLeft = e.clientX - offsetLeft + 10\r\n      this.contextMenuTop = e.clientY - 64\r\n    },\r\n    closeMenu () {\r\n      this.visible = false\r\n    }\r\n  },\r\n  watch: {\r\n    '$route' (to) {\r\n      this.getTagElementByName(to.name)\r\n    },\r\n    visible (value) {\r\n      if (value) {\r\n        document.body.addEventListener('click', this.closeMenu)\r\n      } else {\r\n        document.body.removeEventListener('click', this.closeMenu)\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    setTimeout(() => {\r\n      this.getTagElementByName(this.$route.name)\r\n    }, 200)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import './tags-nav.less';\r\n</style>\r\n"],"sourceRoot":"src/view/main/components/tags-nav"}]}