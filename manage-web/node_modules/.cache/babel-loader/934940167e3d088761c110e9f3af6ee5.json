{"remainingRequest":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\system\\user\\components\\update.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\src\\view\\system\\user\\components\\update.vue","mtime":1562898218000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YKB\\Desktop\\github\\manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { post } from '@/libs/axios-cfg';\nexport default {\n  data() {\n    return {\n      show: true,\n      loading: false,\n      data: {\n        id: 0,\n        username: \"\",\n        age: 0,\n        status: 1,\n        roles: []\n      },\n      ruls: {\n        username: [{\n          required: true,\n          message: \"用户名不能为空\"\n        }, {\n          pattern: /^(\\w){4,16}$/,\n          message: '用户名应为[A-Za-z0-9_]组成的4-16位字符'\n        }],\n        age: [{\n          required: true,\n          message: \"年龄不能为空\"\n        }],\n        status: [{\n          required: true,\n          message: \"用户状态不能为空\"\n        }],\n        roles: [{\n          required: true,\n          message: \"请至少选择一个角色\"\n        }]\n      }\n    };\n  },\n\n  props: {\n    roles: {\n      type: Array,\n      default: []\n    },\n    uid: {\n      type: String,\n      default: {}\n    }\n  },\n\n  created() {\n    this.getUserInfo();\n  },\n\n  methods: {\n    /**\r\n     * @description 关闭Modal\r\n     * @param reload 是否重新加载数据\r\n     */\n    cancel(reload = false) {\n      this.$emit(\"cancel\", \"update\", reload);\n    },\n\n    /**\r\n     * @description 获取用户信息\r\n     */\n    async getUserInfo() {\n      try {\n        let res = await post('/system/user/get/id/{id}', null, {\n          id: this.uid\n        });\n        this.data = res.data; //进行角色的匹配\n\n        let roles = [];\n\n        if (this.data.roles != null) {\n          this.data.roles.forEach(el => {\n            this.roles.forEach((r, index) => {\n              if (el.id == r.id) {\n                //判断当前用户角色列表中的角色ID是否和全部角色列表中的对应\n                roles.push(index); //对应则加入当前角色的数组下标\n              }\n            });\n          });\n        }\n\n        this.data.roles = roles;\n      } catch (error) {\n        this.$throw(error);\n      }\n    },\n\n    /**\r\n     * @description 确定按钮单击回调\r\n     */\n    ok() {\n      this.$refs.modalForm.validate(valid => {\n        if (valid) {\n          let roles = [];\n          this.data.roles.forEach(el => {\n            roles.push(this.roles[el]);\n          });\n          let data = JSON.parse(JSON.stringify(this.data));\n          data.roles = roles;\n          this.update(data);\n        }\n      });\n    },\n\n    /**\r\n     * @description 更新用户数据请求\r\n     */\n    async update(data) {\n      this.loading = true;\n\n      try {\n        let res = await post('/system/user/update/{id}', data, {\n          id: this.data.id\n        });\n        this.$Message.success(\"用户 \" + data.username + \" 更新成功\");\n        this.cancel(true);\n      } catch (error) {\n        this.$throw(error);\n      }\n\n      this.loading = false;\n    }\n\n  }\n};",{"version":3,"sources":["update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <Modal v-model=\"show\" title=\"更新用户\"\r\n            :mask-closable=\"false\" :closable=\"false\">\r\n        <Form ref=\"modalForm\" :model=\"data\" :rules=\"ruls\"\r\n                    :label-width=\"80\">\r\n            <FormItem label=\"ID\">\r\n                <Input disabled v-model.trim=\"data.id\"></Input>\r\n            </FormItem>\r\n            <FormItem label=\"用户名\" prop=\"username\">\r\n                <Input v-model.trim=\"data.username\"></Input>\r\n            </FormItem>\r\n            <FormItem label=\"年龄\" prop=\"age\">\r\n                <InputNumber :min=\"0\" :step=\"1\" v-model.trim=\"data.age\" style=\"width:100%\"/>\r\n            </FormItem>\r\n            <FormItem label=\"状态\" prop=\"status\">\r\n                <Select v-model.trim=\"data.status\" style=\"width:100%\">\r\n                    <Option v-for=\"item in [{label:'正常',value:1},{label:'锁定',value:0}]\"\r\n                        :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                </Select>\r\n            </FormItem>\r\n            <FormItem label=\"角色组\" prop=\"roles\">\r\n                <CheckboxGroup v-model=\"data.roles\">\r\n                    <Checkbox v-for=\"(item,index) in roles\" :label=\"index\" :key=\"item.id\">{{item.name}}</Checkbox>\r\n                </CheckboxGroup>\r\n            </FormItem>\r\n        </Form>\r\n        <div slot=\"footer\">\r\n            <Button type=\"default\" :disabled=\"loading\" @click=\"cancel(false)\">取消</Button>\r\n            <Button type=\"primary\" :loading=\"loading\" @click=\"ok\">确定</Button>\r\n        </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { post } from '@/libs/axios-cfg'\r\nexport default {\r\n  data() {\r\n    return {\r\n      show: true,\r\n      loading: false,\r\n      data: {\r\n        id:0,\r\n        username: \"\",\r\n        age: 0,\r\n        status: 1,\r\n        roles: []\r\n      },\r\n      ruls: {\r\n        username: [\r\n            { required: true, message: \"用户名不能为空\" },\r\n            {pattern:/^(\\w){4,16}$/,message:'用户名应为[A-Za-z0-9_]组成的4-16位字符'}\r\n        ],\r\n        age: [{ required: true, message: \"年龄不能为空\" }],\r\n        status: [{ required: true, message: \"用户状态不能为空\" }],\r\n        roles: [{ required: true, message: \"请至少选择一个角色\" }]\r\n      }\r\n    };\r\n  },\r\n  props: {\r\n    roles: {\r\n      type: Array,\r\n      default: []\r\n    },\r\n    uid:{\r\n        type:String,\r\n        default:{}\r\n    }\r\n  },\r\n  created(){\r\n      this.getUserInfo();\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description 关闭Modal\r\n     * @param reload 是否重新加载数据\r\n     */\r\n    cancel(reload = false) {\r\n      this.$emit(\"cancel\", \"update\", reload);\r\n    },\r\n    /**\r\n     * @description 获取用户信息\r\n     */\r\n    async getUserInfo(){\r\n        try {\r\n            let res = await post('/system/user/get/id/{id}',null,{\r\n                id:this.uid\r\n            })\r\n            this.data = res.data;\r\n            //进行角色的匹配\r\n            let roles = []\r\n            if(this.data.roles!=null){\r\n                this.data.roles.forEach(el=>{\r\n                    this.roles.forEach((r,index)=>{\r\n                        if(el.id == r.id){ //判断当前用户角色列表中的角色ID是否和全部角色列表中的对应\r\n                            roles.push(index) //对应则加入当前角色的数组下标\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            this.data.roles = roles;\r\n        } catch (error) {\r\n            this.$throw(error)\r\n        }\r\n    },\r\n    /**\r\n     * @description 确定按钮单击回调\r\n     */\r\n    ok() {\r\n      this.$refs.modalForm.validate(valid => {\r\n        if (valid) {\r\n            let roles = []\r\n            this.data.roles.forEach(el=>{\r\n                roles.push(this.roles[el]);\r\n            })\r\n            let data = JSON.parse(JSON.stringify(this.data));\r\n            data.roles = roles;\r\n            this.update(data)\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * @description 更新用户数据请求\r\n     */\r\n    async update(data){\r\n        this.loading = true;\r\n        try {\r\n            let res = await post('/system/user/update/{id}',data,{\r\n                id:this.data.id\r\n            })\r\n            this.$Message.success(\"用户 \"+data.username+\" 更新成功\");\r\n            this.cancel(true)\r\n        } catch (error) {\r\n            this.$throw(error)\r\n        }\r\n        this.loading = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n"],"sourceRoot":"src/view/system/user/components"}]}